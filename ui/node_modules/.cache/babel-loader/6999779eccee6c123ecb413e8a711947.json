{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadOpenApis } from '../../actions/apiActions';\nimport { Form, Input } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { register as _register } from '../../actions/apiActions';\n\nvar AddApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddApi, _Component);\n\n  function AddApi(props) {\n    var _this;\n\n    _classCallCheck(this, AddApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddApi).call(this, props));\n    _this.state = {\n      value: '',\n      name: '',\n      web: '',\n      contact: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"grapefruit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Grapefruit\"), React.createElement(\"option\", {\n        value: \"lime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Lime\"), React.createElement(\"option\", {\n        value: \"coconut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Coconut\"), React.createElement(\"option\", {\n        value: \"mango\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Mango\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log(this.state);\n      /*\n      alert(this.state.web);\n      alert(this.state.name);\n      alert(this.state.email);\n      alert(this.state.contact);\n      */\n\n      this.props.register(this.state);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, field) {\n      switch (field) {\n        case 'web':\n          this.setState({\n            web: event.target.value\n          });\n          break;\n\n        case 'name':\n          this.setState({\n            name: event.target.value\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            email: event.target.value\n          });\n          break;\n\n        case 'contact':\n          this.setState({\n            contact: event.target.value\n          });\n          break;\n      }\n    }\n  }]);\n\n  return AddApi;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var openapis = _ref.openapis;\n  return {//count: openapis.total,\n    //apis: openapis.apis,\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    register: function register(companyInfo) {\n      return _register(companyInfo);\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadOpenApis","Form","Input","Button","FormControl","FormCheck","register","AddApi","props","state","value","name","web","contact","handleSubmit","bind","handleChange","console","log","event","field","setState","target","email","mapStateToProps","openapis","mapDispatchToProps","dispatch","companyInfo"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { loadOpenApis } from '../../actions/apiActions'\nimport {Form, Input} from 'reactstrap'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FormCheck from 'react-bootstrap/FormCheck'\n\nimport { register } from '../../actions/apiActions'\n\nclass AddApi extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            name: '',\n            web: '',\n            contact: '',\n        };\n\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n  \n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            \n            <div className= \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Pick your favorite flavor:\n                        <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"grapefruit\">Grapefruit</option>\n                        <option value=\"lime\">Lime</option>\n                        <option value=\"coconut\">Coconut</option>\n                        <option value=\"mango\">Mango</option>\n                        </select>\n                    </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n            </div>\n        )\n    }\n    handleSubmit() {\n        console.log(this.state);\n        /*\n        alert(this.state.web);\n        alert(this.state.name);\n        alert(this.state.email);\n        alert(this.state.contact);\n        */\n       \n        this.props.register(this.state);\n    }\n\n    handleChange(event, field) {\n        switch (field ) {\n            case 'web':\n                this.setState({web: event.target.value});\n                break;\n            case 'name':\n                this.setState({name: event.target.value});\n                break;\n            case 'email':\n                this.setState({email: event.target.value});\n                break;\n            case 'contact':\n                this.setState({contact: event.target.value});\n                break;\n\n        }\n    }\n}\n\n\n\nconst mapStateToProps = ({ openapis }) => ({\n  //count: openapis.total,\n  //apis: openapis.apis,\n \n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      register: (companyInfo) => register(companyInfo),\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}