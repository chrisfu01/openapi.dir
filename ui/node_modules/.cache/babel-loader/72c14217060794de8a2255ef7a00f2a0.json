{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPubs as _loadPubs } from '../../actions/apiActions';\nimport { loadOpenApis } from '../../actions/apiActions';\nimport { Form, Input } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { uploadAPI as _uploadAPI } from '../../actions/apiActions';\n\nvar AddApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddApi, _Component);\n\n  function AddApi(props) {\n    var _this;\n\n    _classCallCheck(this, AddApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddApi).call(this, props));\n\n    _this.onChangeHandler = function (event) {\n      //console.log(event.target.files[0]);\n      _this.setState({\n        selectedFile: event.target.files,\n        loaded: 1\n      });\n    };\n\n    _this.state = {\n      pubid: '',\n      selectedFile: null,\n      loaded: 0\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.props.loadOpenApis(0); \n      this.props.loadPubs(0);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (this.props.completed && prevProps.completed == false) {\n        this.props.changePage();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"api-section contact-section px-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row d-flex mb-5 contact-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Add My API\"))), React.createElement(\"div\", {\n        className: \"row block-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"bg-light p-5 contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Select a category\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Technology\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"e-Commerce\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"API Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel text-primary fileinput-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Click here to select file to upload\", React.createElement(\"input\", {\n        className: \"file-input\",\n        type: \"file\",\n        name: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"API Spec File\",\n        className: \"form-control\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-primary mt-4 py-3 px-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })))))));\n    }\n  }, {\n    key: \"renderOpenAPI\",\n    value: function renderOpenAPI(pb, idx) {\n      return React.createElement(\"option\", {\n        key: idx,\n        value: pb.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, pb.name);\n    }\n  }, {\n    key: \"renderOpenAPIs\",\n    value: function renderOpenAPIs() {\n      var _this2 = this;\n\n      if (this.props.pub == null && this.props.pub.length == 0) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Company\", this.props.pub.map(function (pb, idx) {\n        return _this2.renderOpenAPI(pb, idx);\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var data = new FormData();\n      data.append(\"file\", this.state.selectedFile[0]);\n      data.append(\"pubid\", this.state.pubid);\n      console.log(data.get(\"pubid\"));\n      this.props.uploadAPI(data);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        pubid: event.target.value\n      });\n    }\n  }]);\n\n  return AddApi;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var publishers = _ref.publishers,\n      upload = _ref.upload;\n  return {\n    count: publishers.total,\n    pub: publishers.publishers,\n    uploading: upload.isUploading,\n    completed: upload.isComplete\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    uploadAPI: function uploadAPI(apiInfo) {\n      return _uploadAPI(apiInfo);\n    },\n    loadPubs: function loadPubs(page) {\n      return _loadPubs(page);\n    },\n    changePage: function changePage() {\n      return push('/');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadPubs","loadOpenApis","Form","Input","Button","FormControl","FormCheck","uploadAPI","AddApi","props","onChangeHandler","event","setState","selectedFile","target","files","loaded","state","pubid","handleSubmit","bind","prevProps","completed","changePage","pb","idx","id","name","pub","length","handleChange","map","renderOpenAPI","data","FormData","append","console","log","get","value","mapStateToProps","publishers","upload","count","total","uploading","isUploading","isComplete","mapDispatchToProps","dispatch","apiInfo","page"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { loadPubs } from '../../actions/apiActions'\nimport { loadOpenApis } from '../../actions/apiActions'\nimport { Form, Input } from 'reactstrap'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FormCheck from 'react-bootstrap/FormCheck'\nimport { uploadAPI } from '../../actions/apiActions'\n\nclass AddApi extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pubid: '',\n      selectedFile: null,\n      loaded: 0,\n    };\n\n\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  componentDidMount() {\n    //this.props.loadOpenApis(0); \n    this.props.loadPubs(0);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.completed && prevProps.completed == false) {\n      this.props.changePage();\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"api-section contact-section px-md-4\">\n        <div className=\"container\">\n          <div className=\"row d-flex mb-5 contact-info\">\n            <div className=\"col-md-12 mb-4\">\n              <h2 className=\"h3\">Add My API</h2>\n            </div>\n\n\n          </div>\n\n          <div className=\"row block-9\">\n            <div className=\"col-md-12 d-flex\">\n              <form action=\"#\" className=\"bg-light p-5 contact-form\">\n\n                <div className=\"form-group\">\n                  <select className=\"form-control\">\n                    <option>Select a category</option>\n                    <option>Technology</option>\n                    <option>e-Commerce</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"API Name\" />\n                </div>\n\n                <div className=\"form-group\">\n                  <span className=\"btnlabel text-primary fileinput-button\">\n                    Click here to select file to upload\n                      <input className=\"file-input\" type=\"file\" name=\"avatar\" />\n                  </span>\n                  <input type=\"text\" placeholder=\"API Spec File\" className=\"form-control\" readOnly />\n                </div>\n\n\n\n                <div className=\"form-group\">\n                  <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary mt-4 py-3 px-5\" />\n                </div>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n  renderOpenAPI(pb, idx) {\n    return (\n        <option key={idx} value={pb.id}>{pb.name}</option>\n    )\n  }\n\nrenderOpenAPIs() {\n    if (this.props.pub == null && this.props.pub.length == 0) {\n      return null;\n    }\n    return (\n      <div className= \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n            <form >\n                <label>\n                    <select onChange={this.handleChange.bind(this)}>\n                    Company\n                    \n                {this.props.pub.map((pb, idx)=>this.renderOpenAPI(pb, idx))}\n                </select>\n                <p></p>\n                <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n                </label>\n                <p></p>\n                <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit}/>\n            </form>\n        </div>\n    )\n\n  }\n\n\n  handleSubmit() {\n      const data = new FormData();\n      data.append(\"file\", this.state.selectedFile[0]);\n      data.append(\"pubid\", this.state.pubid);\n      console.log(data.get(\"pubid\"));\n      this.props.uploadAPI(data);\n  }\n\n  handleChange(event) {\n      this.setState({pubid: event.target.value});        \n  }\n\n  onChangeHandler=event=>{\n      //console.log(event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files,\n        loaded: 1,\n      })\n  }\n\n}\n\n\n\nconst mapStateToProps = ({ publishers, upload }) => ({\n  count: publishers.total,\n  pub: publishers.publishers,\n  uploading: upload.isUploading,\n  completed: upload.isComplete\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      uploadAPI: (apiInfo) => uploadAPI(apiInfo),\n      loadPubs: (page) => loadPubs(page),\n      changePage: () => push('/')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}