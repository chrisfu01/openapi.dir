{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPubs as _loadPubs } from '../../actions/apiActions';\nimport { loadOpenApis } from '../../actions/apiActions';\nimport { Form, Input } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { uploadAPI as _uploadAPI } from '../../actions/apiActions';\n\nvar AddApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddApi, _Component);\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.props.loadOpenApis(0); \n      this.props.loadPubs(0);\n    }\n  }]);\n\n  function AddApi(props) {\n    var _this;\n\n    _classCallCheck(this, AddApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddApi).call(this, props));\n\n    _this.onChangeHandler = function (event) {\n      //console.log(event.target.files[0]);\n      _this.setState({\n        selectedFile: event.target.files,\n        loaded: 1\n      });\n    };\n\n    _this.state = {\n      value: '',\n      name: '',\n      web: '',\n      contact: '',\n      selectedFile: null,\n      loaded: 0\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddApi, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (this.props.completed && prevProps.completed == false) {\n        this.props.changePage();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.renderOpenAPIs());\n    }\n  }, {\n    key: \"renderOpenAPI\",\n    value: function renderOpenAPI(pb, idx) {\n      return React.createElement(\"option\", {\n        key: idx,\n        value: pb.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, pb.name);\n    }\n  }, {\n    key: \"renderOpenAPIs\",\n    value: function renderOpenAPIs() {\n      var _this2 = this;\n\n      if (this.props.pub == null && this.props.pub.length == 0) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Company\", this.props.pub.map(function (pb, idx) {\n        return _this2.renderOpenAPI(pb, idx);\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      //console.log(this.state);\n      //alert(this.state.loaded);\n      //alert(this.state.value);\n      //alert(this.state.selectedFile[0]);\n      //alert(this.state.contact);\n      var data = new FormData();\n      data.append(\"file\", this.state.selectedFile[0]);\n      this.props.uploadAPI(data);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      }); //alert(this.props.apis);\n    }\n  }]);\n\n  return AddApi;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var publishers = _ref.publishers,\n      upload = _ref.upload;\n  return {\n    count: publishers.total,\n    pub: publishers.publishers,\n    uploading: upload.isUploading,\n    completed: uploading.isComplete\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    uploadAPI: function uploadAPI(apiInfo) {\n      return _uploadAPI(apiInfo);\n    },\n    loadPubs: function loadPubs(page) {\n      return _loadPubs(page);\n    },\n    changePage: function changePage() {\n      return push('/');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadPubs","loadOpenApis","Form","Input","Button","FormControl","FormCheck","uploadAPI","AddApi","props","onChangeHandler","event","setState","selectedFile","target","files","loaded","state","value","name","web","contact","handleSubmit","bind","prevProps","completed","changePage","renderOpenAPIs","pb","idx","id","pub","length","map","renderOpenAPI","data","FormData","append","mapStateToProps","publishers","upload","count","total","uploading","isUploading","isComplete","mapDispatchToProps","dispatch","apiInfo","page"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { loadPubs } from '../../actions/apiActions'\nimport { loadOpenApis } from '../../actions/apiActions'\nimport {Form, Input} from 'reactstrap'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FormCheck from 'react-bootstrap/FormCheck'\nimport { uploadAPI } from '../../actions/apiActions'\n\nclass AddApi extends Component {\n    componentDidMount() {\n        //this.props.loadOpenApis(0); \n        this.props.loadPubs(0);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            name: '',\n            web: '',\n            contact: '',\n            selectedFile: null,\n            loaded: 0,\n        };\n       \n\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n  \n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.completed && prevProps.completed == false) {\n          this.props.changePage();\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.renderOpenAPIs()}\n            </Fragment>      \n            \n        )\n    }\n\n    renderOpenAPI(pb, idx) {\n        return (\n            <option key={idx} value={pb.id}>{pb.name}</option>\n        )\n      }\n    \n    renderOpenAPIs() {\n        if (this.props.pub == null && this.props.pub.length == 0) {\n          return null;\n        }\n        return (\n          <div className= \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n                <form >\n                    <label>\n                        <select>\n                        Company\n                        \n                    {this.props.pub.map((pb, idx)=>this.renderOpenAPI(pb, idx))}\n                    </select>\n                    <p></p>\n                    <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n                    </label>\n                    <p></p>\n                    <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit}/>\n                </form>\n            </div>\n        )\n    \n      }\n    \n\n\n    handleSubmit() {\n        //console.log(this.state);\n        //alert(this.state.loaded);\n        //alert(this.state.value);\n        //alert(this.state.selectedFile[0]);\n        //alert(this.state.contact);\n        const data = new FormData();\n        data.append(\"file\", this.state.selectedFile[0]);\n        this.props.uploadAPI(data);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        //alert(this.props.apis);\n        \n    }\n    \n    onChangeHandler=event=>{\n        //console.log(event.target.files[0]);\n        this.setState({\n          selectedFile: event.target.files,\n          loaded: 1,\n        })\n      }\n\n}\n\n\nconst mapStateToProps = ({ publishers, upload }) => ({\n\n  count: publishers.total,\n  pub: publishers.publishers,\n  uploading: upload.isUploading,\n  completed: uploading.isComplete\n\n})\n\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      uploadAPI: (apiInfo) => uploadAPI(apiInfo),\n      loadPubs: (page) => loadPubs(page),\n      changePage: () => push('/')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}