{"ast":null,"code":"var objectAssign = require('object-assign');\n\nfunction arrayRemove(arr, item) {\n  var idx = arr.indexOf(item);\n  if (~idx) arr.splice(idx, 1);\n}\n\nfunction FileAppender(strategy, req) {\n  this.strategy = strategy;\n  this.req = req;\n\n  switch (strategy) {\n    case 'NONE':\n      break;\n\n    case 'VALUE':\n      break;\n\n    case 'ARRAY':\n      req.files = [];\n      break;\n\n    case 'OBJECT':\n      req.files = Object.create(null);\n      break;\n\n    default:\n      throw new Error('Unknown file strategy: ' + strategy);\n  }\n}\n\nFileAppender.prototype.insertPlaceholder = function (file) {\n  var placeholder = {\n    fieldname: file.fieldname\n  };\n\n  switch (this.strategy) {\n    case 'NONE':\n      break;\n\n    case 'VALUE':\n      break;\n\n    case 'ARRAY':\n      this.req.files.push(placeholder);\n      break;\n\n    case 'OBJECT':\n      if (this.req.files[file.fieldname]) {\n        this.req.files[file.fieldname].push(placeholder);\n      } else {\n        this.req.files[file.fieldname] = [placeholder];\n      }\n\n      break;\n  }\n\n  return placeholder;\n};\n\nFileAppender.prototype.removePlaceholder = function (placeholder) {\n  switch (this.strategy) {\n    case 'NONE':\n      break;\n\n    case 'VALUE':\n      break;\n\n    case 'ARRAY':\n      arrayRemove(this.req.files, placeholder);\n      break;\n\n    case 'OBJECT':\n      if (this.req.files[placeholder.fieldname].length === 1) {\n        delete this.req.files[placeholder.fieldname];\n      } else {\n        arrayRemove(this.req.files[placeholder.fieldname], placeholder);\n      }\n\n      break;\n  }\n};\n\nFileAppender.prototype.replacePlaceholder = function (placeholder, file) {\n  if (this.strategy === 'VALUE') {\n    this.req.file = file;\n    return;\n  }\n\n  delete placeholder.fieldname;\n  objectAssign(placeholder, file);\n};\n\nmodule.exports = FileAppender;","map":null,"metadata":{},"sourceType":"script"}