{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPubs } from '../../actions/apiActions';\nimport { loadOpenApis as _loadOpenApis } from '../../actions/apiActions';\nimport { Form, Input } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { register } from '../../actions/apiActions';\n\nvar AddApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddApi, _Component);\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadOpenApis(0);\n    }\n  }]);\n\n  function AddApi(props) {\n    var _this;\n\n    _classCallCheck(this, AddApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddApi).call(this, props));\n    _this.state = {\n      value: '',\n      name: '',\n      web: '',\n      contact: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n        value: this.state.value,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        value: \"grapefruit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Grapefruit\"), React.createElement(\"option\", {\n        value: \"lime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Lime\"), React.createElement(\"option\", {\n        value: \"coconut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Coconut\"), React.createElement(\"option\", {\n        value: \"mango\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Mango\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderOpenAPI\",\n    value: function renderOpenAPI(pb) {\n      return React.createElement(\"option\", {\n        value: \"lime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, pb.name);\n    }\n  }, {\n    key: \"renderOpenAPIs\",\n    value: function renderOpenAPIs() {\n      var _this2 = this;\n\n      if (this.props.apis == null && this.props.api.length == 0) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.apis.map(function (api) {\n        return _this2.renderOpenAPI(api);\n      }));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log(this.state);\n      /*\n      alert(this.state.web);\n      alert(this.state.name);\n      alert(this.state.email);\n      alert(this.state.contact);\n      */\n\n      this.props.register(this.state);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n      alert(this.props.pub);\n    }\n  }]);\n\n  return AddApi;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var publisher = _ref.publisher;\n  return {\n    count: publisher.total,\n    pub: publisher.publishers\n  };\n};\n/*\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      //register: (companyInfo) => register(companyInfo),\n      loadPubs: (page) => loadPubs(page),\n      changePage: () => push('/about-us')\n      \n    },\n    dispatch\n  )\n*/\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loadOpenApis: function loadOpenApis(page) {\n      return _loadOpenApis(page);\n    },\n    changePage: function changePage() {\n      return push('/about-us');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadPubs","loadOpenApis","Form","Input","Button","FormControl","FormCheck","register","AddApi","props","state","value","name","web","contact","handleSubmit","bind","handleChange","pb","apis","api","length","map","renderOpenAPI","console","log","event","setState","target","alert","pub","mapStateToProps","publisher","count","total","publishers","mapDispatchToProps","dispatch","page","changePage"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { loadPubs } from '../../actions/apiActions'\nimport { loadOpenApis } from '../../actions/apiActions'\nimport {Form, Input} from 'reactstrap'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FormCheck from 'react-bootstrap/FormCheck'\n\nimport { register } from '../../actions/apiActions'\n\nclass AddApi extends Component {\n    componentDidMount() {\n        this.props.loadOpenApis(0); \n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            name: '',\n            web: '',\n            contact: '',\n        };\n\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n  \n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            \n            <div className= \"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Pick your favorite flavor:\n                        <select value={this.state.value} onChange={this.handleChange.bind(this)}>\n                        <option selected value=\"grapefruit\">Grapefruit</option>\n                        <option value=\"lime\">Lime</option>\n                        <option value=\"coconut\">Coconut</option>\n                        <option value=\"mango\">Mango</option>\n                        </select>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                    </form>\n            </div>\n        )\n    }\n\n    renderOpenAPI(pb) {\n        return (\n            <option value=\"lime\">{pb.name}</option>\n        )\n      }\n    \n    renderOpenAPIs() {\n        if (this.props.apis == null && this.props.api.length == 0) {\n          return null;\n        }\n        return (\n          <div className=\"row\">\n            {this.props.apis.map(api=>this.renderOpenAPI(api))}\n          </div>\n        )\n    \n      }\n    \n\n\n    handleSubmit() {\n        console.log(this.state);\n        /*\n        alert(this.state.web);\n        alert(this.state.name);\n        alert(this.state.email);\n        alert(this.state.contact);\n        */\n        \n       \n        this.props.register(this.state);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        alert(this.props.pub);\n        \n    }\n}\n\nconst mapStateToProps = ({ publisher }) => ({\n  count: publisher.total,\n  pub: publisher.publishers,\n})\n\n/*\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      //register: (companyInfo) => register(companyInfo),\n      loadPubs: (page) => loadPubs(page),\n      changePage: () => push('/about-us')\n      \n    },\n    dispatch\n  )\n*/\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      loadOpenApis: (page) => loadOpenApis(page),\n      changePage: () => push('/about-us')\n    },\n    dispatch\n  )\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}