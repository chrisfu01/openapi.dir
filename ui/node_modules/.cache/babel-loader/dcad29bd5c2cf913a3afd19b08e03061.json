{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/apiDisplay/ApiDisplay.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadPubs as _loadPubs } from '../../actions/apiActions';\nimport { loadOpenApis } from '../../actions/apiActions';\nimport { RedocStandalone } from 'redoc';\nimport { uploadAPI as _uploadAPI } from '../../actions/apiActions';\n\nvar ApiDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApiDisplay, _Component);\n\n  _createClass(ApiDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.props.loadOpenApis(0); \n      //this.props.loadPubs(0);\n    }\n  }]);\n\n  function ApiDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, ApiDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ApiDisplay).call(this, props));\n    _this.state = {\n      pubid: '',\n      selectedFile: null,\n      loaded: 0\n    };\n    console.log(_this.props.match.params.id); // this.handleSubmit = this.handleSubmit.bind(this);\n\n    return _this;\n  }\n\n  _createClass(ApiDisplay, [{\n    key: \"render\",\n    value: function render(pb) {\n      return React.createElement(RedocStandalone, {\n        specUrl: \"http://1forge.com/openapi.json\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ApiDisplay;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var publishers = _ref.publishers,\n      upload = _ref.upload;\n  return {\n    count: publishers.total,\n    pub: publishers.publishers,\n    uploading: upload.isUploading,\n    completed: upload.isComplete\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    uploadAPI: function uploadAPI(apiInfo) {\n      return _uploadAPI(apiInfo);\n    },\n    loadPubs: function loadPubs(page) {\n      return _loadPubs(page);\n    },\n    changePage: function changePage() {\n      return push('/');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/apiDisplay/ApiDisplay.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadPubs","loadOpenApis","RedocStandalone","uploadAPI","ApiDisplay","props","state","pubid","selectedFile","loaded","console","log","match","params","id","pb","mapStateToProps","publishers","upload","count","total","pub","uploading","isUploading","completed","isComplete","mapDispatchToProps","dispatch","apiInfo","page","changePage","AddApi"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAQ,IAARA,SAAT,QAAyB,0BAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,SAASC,SAAS,IAATA,UAAT,QAA0B,0BAA1B;;IAEMC,U;;;;;;;wCACkB,CAChB;AACA;AACH;;;AAED,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC,EARe,CAUhB;;AAVgB;AAWlB;;;;2BAQMC,E,EAAI;AACP,aACI,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAC,gCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;;;EA7BkBpB,S;;AAqCzB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,MAAf,QAAeA,MAAf;AAAA,SAA6B;AAEnDC,IAAAA,KAAK,EAAEF,UAAU,CAACG,KAFiC;AAGnDC,IAAAA,GAAG,EAAEJ,UAAU,CAACA,UAHmC;AAInDK,IAAAA,SAAS,EAAEJ,MAAM,CAACK,WAJiC;AAKnDC,IAAAA,SAAS,EAAEN,MAAM,CAACO;AALiC,GAA7B;AAAA,CAAxB;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjC7B,kBAAkB,CAChB;AACEK,IAAAA,SAAS,EAAE,mBAACyB,OAAD;AAAA,aAAazB,UAAS,CAACyB,OAAD,CAAtB;AAAA,KADb;AAEE5B,IAAAA,QAAQ,EAAE,kBAAC6B,IAAD;AAAA,aAAU7B,SAAQ,CAAC6B,IAAD,CAAlB;AAAA,KAFZ;AAGEC,IAAAA,UAAU,EAAE;AAAA,aAAMjC,IAAI,CAAC,GAAD,CAAV;AAAA;AAHd,GADgB,EAMhB8B,QANgB,CADe;AAAA,CAAnC;;AAUA,eAAe5B,OAAO,CACpBiB,eADoB,EAEpBU,kBAFoB,CAAP,CAGbK,MAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { loadPubs } from '../../actions/apiActions'\nimport { loadOpenApis } from '../../actions/apiActions'\nimport { RedocStandalone } from 'redoc';\n\nimport { uploadAPI } from '../../actions/apiActions'\n\nclass ApiDisplay extends Component {\n    componentDidMount() {\n        //this.props.loadOpenApis(0); \n        //this.props.loadPubs(0);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pubid: '',\n            selectedFile: null,\n            loaded: 0,\n        };\n       \n        console.log(this.props.match.params.id);\n        \n       // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    \n  \n\n\n    \n\n    render(pb) {\n        return (\n            <RedocStandalone specUrl=\"http://1forge.com/openapi.json\"/>\n        )\n      }\n    \n\n\n   \n}\n\n\nconst mapStateToProps = ({ publishers, upload }) => ({\n\n  count: publishers.total,\n  pub: publishers.publishers,\n  uploading: upload.isUploading,\n  completed: upload.isComplete\n\n})\n\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      uploadAPI: (apiInfo) => uploadAPI(apiInfo),\n      loadPubs: (page) => loadPubs(page),\n      changePage: () => push('/')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}