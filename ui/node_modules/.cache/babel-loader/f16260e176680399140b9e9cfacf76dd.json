{"ast":null,"code":"import _classCallCheck from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/chrisfu/openapi.portal/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { push } from 'connected-react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loadOpenApis } from '../../actions/apiActions';\nimport { Form, Input } from 'reactstrap';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport FormCheck from 'react-bootstrap/FormCheck';\nimport { uploadAPI as _uploadAPI } from '../../actions/apiActions';\n\nvar AddApi =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddApi, _Component);\n\n  function AddApi(props) {\n    var _this;\n\n    _classCallCheck(this, AddApi);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddApi).call(this, props));\n\n    _this.onChangeHandler = function (event) {\n      console.log(event.target.files[0]);\n\n      _this.setState({\n        selectedFile: event.target.files[0],\n        filename: event.target.files[0].name,\n        loaded: 1\n      });\n    };\n\n    _this.state = {\n      categoryId: null,\n      selectedFile: null,\n      apiName: null,\n      loaded: 0,\n      filename: null\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddApi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.user == null) {\n        this.props.gotoLogin();\n      } else {// load all the categories\n        // this.props.loadCategories();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (this.props.completed && prevProps.completed == false) {\n        this.props.changePage();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"api-section contact-section px-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row d-flex mb-5 contact-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add My API\"))), React.createElement(\"div\", {\n        className: \"row block-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"bg-light p-5 contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.handleCategoryChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Select a category\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Technology\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"e-Commerce\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.apiName,\n        className: \"form-control\",\n        placeholder: \"API Name\",\n        onChange: function onChange(e) {\n          return _this2.handleApiNameChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel text-primary fileinput-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Click here to select file to upload\", React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.filename,\n        placeholder: \"API Spec File\",\n        className: \"form-control\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        value: \"Submit\",\n        className: \"btn btn-primary mt-4 py-3 px-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })))))));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var data = new FormData();\n      data.append(\"file\", this.state.selectedFile);\n      data.append(\"categoryId\", this.state.categoryId);\n\n      if (this.state.apiName) {\n        data.append(\"apiName\", this.state.apiName);\n      }\n\n      console.log(data);\n      this.props.uploadAPI(data);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        pubid: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCategoryChange\",\n    value: function handleCategoryChange(event) {\n      this.setState({\n        categoryId: event.target.value\n      });\n    }\n  }, {\n    key: \"handleApiNameChange\",\n    value: function handleApiNameChange(event) {\n      this.setState({\n        apiName: event.target.value\n      });\n    }\n  }]);\n\n  return AddApi;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var publishers = _ref.publishers,\n      upload = _ref.upload,\n      auth = _ref.auth;\n  return {\n    count: publishers.total,\n    uploading: upload.isUploading,\n    completed: upload.isComplete,\n    user: auth.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    uploadAPI: function uploadAPI(apiInfo) {\n      return _uploadAPI(apiInfo);\n    },\n    changePage: function changePage() {\n      return push('/');\n    },\n    gotoLogin: function gotoLogin() {\n      return push('/login');\n    }\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddApi);","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/containers/addApi/AddApi.js"],"names":["React","Component","Fragment","push","bindActionCreators","connect","loadOpenApis","Form","Input","Button","FormControl","FormCheck","uploadAPI","AddApi","props","onChangeHandler","event","console","log","target","files","setState","selectedFile","filename","name","loaded","state","categoryId","apiName","handleSubmit","bind","user","gotoLogin","prevProps","completed","changePage","e","handleCategoryChange","handleApiNameChange","data","FormData","append","pubid","value","mapStateToProps","publishers","upload","auth","count","total","uploading","isUploading","isComplete","mapDispatchToProps","dispatch","apiInfo"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { loadOpenApis } from '../../actions/apiActions'\nimport { Form, Input } from 'reactstrap'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FormCheck from 'react-bootstrap/FormCheck'\nimport { uploadAPI } from '../../actions/apiActions'\n\nclass AddApi extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryId: null,\n      selectedFile: null,\n      apiName: null,\n      loaded: 0,\n      filename: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.user == null) {\n      this.props.gotoLogin();\n    }\n    else {\n      // load all the categories\n      // this.props.loadCategories();\n    }\n    \n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.completed && prevProps.completed == false) {\n      this.props.changePage();\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"api-section contact-section px-md-4\">\n        <div className=\"container\">\n          <div className=\"row d-flex mb-5 contact-info\">\n            <div className=\"col-md-12 mb-4\">\n              <h2 className=\"h3\">Add My API</h2>\n            </div>\n          </div>\n\n          <div className=\"row block-9\">\n            <div className=\"col-md-12 d-flex\">\n              <form action=\"#\" className=\"bg-light p-5 contact-form\">\n                <div className=\"form-group\">\n                  <select className=\"form-control\" onChange={e=>this.handleCategoryChange(e)}>\n                    <option>Select a category</option>\n                    <option value=\"1\">Technology</option>\n                    <option  value=\"2\">e-Commerce</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <input type=\"text\" value={this.state.apiName} className=\"form-control\" placeholder=\"API Name\" \n                    onChange={e=>this.handleApiNameChange(e)} />\n                </div>\n\n                <div className=\"form-group\">\n                  <span className=\"btnlabel text-primary fileinput-button\">\n                    Click here to select file to upload\n                    <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n                  </span>\n                  <input type=\"text\" value={this.state.filename}  placeholder=\"API Spec File\" \n                    className=\"form-control\" readOnly />\n                </div>\n\n                <div className=\"form-group\">\n                  <input type=\"button\" onClick={this.handleSubmit} value=\"Submit\" className=\"btn btn-primary mt-4 py-3 px-5\" />\n                </div>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n  handleSubmit() {\n      const data = new FormData();\n      data.append(\"file\", this.state.selectedFile);\n      data.append(\"categoryId\", this.state.categoryId);\n      if (this.state.apiName) {\n        data.append(\"apiName\", this.state.apiName);\n      }\n      \n      console.log(data);\n\n      this.props.uploadAPI(data);\n  }\n\n  handleChange(event) {\n      this.setState({pubid: event.target.value});        \n  }\n\n  handleCategoryChange(event) {\n    this.setState({categoryId: event.target.value});        \n  }\n\n  handleApiNameChange(event) {\n    this.setState({apiName: event.target.value});        \n  }\n\n  onChangeHandler=event=>{\n      console.log(event.target.files[0]);\n\n      this.setState({\n        selectedFile: event.target.files[0],\n        filename: event.target.files[0].name,\n        loaded: 1,\n      })\n  }\n\n}\n\nconst mapStateToProps = ({ publishers, upload, auth }) => ({\n  count: publishers.total,\n  uploading: upload.isUploading,\n  completed: upload.isComplete, \n  user: auth.user,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      uploadAPI: (apiInfo) => uploadAPI(apiInfo),\n      changePage: () => push('/'),\n      gotoLogin: () =>push('/login')\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddApi)\n"]},"metadata":{},"sourceType":"module"}