{"ast":null,"code":"var reFirstKey = /^[^\\[]*/;\nvar reDigitPath = /^\\[(\\d+)\\]/;\nvar reNormalPath = /^\\[([^\\]]+)\\]/;\n\nfunction parsePath(key) {\n  function failure() {\n    return [{\n      type: 'object',\n      key: key,\n      last: true\n    }];\n  }\n\n  var firstKey = reFirstKey.exec(key)[0];\n  if (!firstKey) return failure();\n  var len = key.length;\n  var pos = firstKey.length;\n  var tail = {\n    type: 'object',\n    key: firstKey\n  };\n  var steps = [tail];\n\n  while (pos < len) {\n    var m;\n\n    if (key[pos] === '[' && key[pos + 1] === ']') {\n      pos += 2;\n      tail.append = true;\n      if (pos !== len) return failure();\n      continue;\n    }\n\n    m = reDigitPath.exec(key.substring(pos));\n\n    if (m !== null) {\n      pos += m[0].length;\n      tail.nextType = 'array';\n      tail = {\n        type: 'array',\n        key: parseInt(m[1], 10)\n      };\n      steps.push(tail);\n      continue;\n    }\n\n    m = reNormalPath.exec(key.substring(pos));\n\n    if (m !== null) {\n      pos += m[0].length;\n      tail.nextType = 'object';\n      tail = {\n        type: 'object',\n        key: m[1]\n      };\n      steps.push(tail);\n      continue;\n    }\n\n    return failure();\n  }\n\n  tail.last = true;\n  return steps;\n}\n\nmodule.exports = parsePath;","map":null,"metadata":{},"sourceType":"script"}