{"ast":null,"code":"import axios from 'axios';\nvar apiUrl = 'http://localhost:3000/public/spec';\nvar pubUrl = 'http://localhost:3000/public/pub';\nvar registerPostUrl = 'http://localhost:3000/public/company_register';\nvar uploadUrl = 'http://localhost:3000/public/upload';\nexport var OPENAPI_REQUESTED = 'OPENAPI_REQUESTED';\nexport var OPENAPI_REQUEST_SUCCESS = 'OPENAPI_REQUEST_SUCCESS';\nexport var OPENAPI_REQUEST_FAILURE = 'OPENAPI_REQUEST_FAILURE';\nexport var REGISTER_REQUESTED = 'REGISTER_REQUESTED';\nexport var REGISTER_REQUEST_SUCCESS = 'REGISTER_REQUEST_SUCCESS';\nexport var REGISTER_REQUEST_FAILURE = 'REGISTER_REQUEST_FAILURE';\nexport var PUB_REQUESTED = 'PUB_REQUESTED';\nexport var PUB_REQUEST_SUCCESS = 'PUB_REQUEST_SUCCESS';\nexport var PUB_REQUEST_FAILURE = 'PUB_REQUEST_FAILURE';\nexport var UPLOAD_REQUESTED = 'UPLOAD_REQUESTED';\nexport var UPLOAD_REQUEST_SUCCESS = 'UPLOAD_REQUEST_SUCCESS';\nexport var UPLOAD_REQUEST_FAILURE = 'UPLOAD_REQUEST_FAILURE';\nexport var openapiRequestSuccess = function openapiRequestSuccess(payload) {\n  return {\n    type: OPENAPI_REQUEST_SUCCESS,\n    payload: payload\n  };\n};\nexport var openapiRequested = function openapiRequested(data) {\n  return {\n    type: OPENAPI_REQUESTED\n  };\n};\nexport var RegRequestSuccess = function RegRequestSuccess(payload) {\n  return {\n    type: REGISTER_REQUEST_SUCCESS,\n    payload: payload\n  };\n};\nexport var RegRequested = function RegRequested(data) {\n  return {\n    type: REGISTER_REQUESTED\n  };\n};\nexport var PubsRequestSuccess = function PubsRequestSuccess(payload) {\n  return {\n    type: PUB_REQUEST_SUCCESS,\n    payload: payload\n  };\n};\nexport var PubsRequested = function PubsRequested(data) {\n  return {\n    type: PUB_REQUESTED\n  };\n};\nexport var UploadRequestSuccess = function UploadRequestSuccess(payload) {\n  return {\n    type: UPLOAD_REQUEST_SUCCESS,\n    payload: payload\n  };\n};\nexport var UploadRequested = function UploadRequested(data) {\n  return {\n    type: UPLOAD_REQUESTED\n  };\n};\nexport var loadOpenApis = function loadOpenApis(page) {\n  return function (dispatch) {\n    dispatch(openapiRequested());\n    return axios.get(apiUrl).then(function (response) {\n      dispatch(openapiRequestSuccess(response.data));\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n};\nexport var loadPubs = function loadPubs(page) {\n  return function (dispatch) {\n    dispatch(PubsRequested());\n    return axios.get(pubUrl).then(function (response) {\n      dispatch(PubsRequestSuccess(response.data));\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n};\nexport var uploadAPI = function uploadAPI(page) {\n  console.log(page);\n  return function (dispatch) {\n    dispatch(UploadRequested());\n    return axios.post(uploadUrl, page, {}).then(function (response) {\n      dispatch(UploadRequestSuccess(response.data));\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n};\nexport function register(companyInfo) {\n  return function (dispatch) {\n    dispatch(RegRequested());\n    console.log(companyInfo);\n    return axios.post(registerPostUrl, companyInfo).then(function (response) {\n      dispatch(RegRequestSuccess(response.data));\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/Users/chrisfu/openapi.portal/ui/src/actions/apiActions.js"],"names":["axios","apiUrl","pubUrl","registerPostUrl","uploadUrl","OPENAPI_REQUESTED","OPENAPI_REQUEST_SUCCESS","OPENAPI_REQUEST_FAILURE","REGISTER_REQUESTED","REGISTER_REQUEST_SUCCESS","REGISTER_REQUEST_FAILURE","PUB_REQUESTED","PUB_REQUEST_SUCCESS","PUB_REQUEST_FAILURE","UPLOAD_REQUESTED","UPLOAD_REQUEST_SUCCESS","UPLOAD_REQUEST_FAILURE","openapiRequestSuccess","payload","type","openapiRequested","data","RegRequestSuccess","RegRequested","PubsRequestSuccess","PubsRequested","UploadRequestSuccess","UploadRequested","loadOpenApis","page","dispatch","get","then","response","catch","error","loadPubs","uploadAPI","console","log","post","register","companyInfo"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\n\n\n\nconst apiUrl = 'http://localhost:3000/public/spec';\nconst pubUrl = 'http://localhost:3000/public/pub';\nconst registerPostUrl = 'http://localhost:3000/public/company_register';\nconst uploadUrl = 'http://localhost:3000/public/upload';\n\n\nexport const OPENAPI_REQUESTED = 'OPENAPI_REQUESTED'\nexport const OPENAPI_REQUEST_SUCCESS = 'OPENAPI_REQUEST_SUCCESS'\nexport const OPENAPI_REQUEST_FAILURE = 'OPENAPI_REQUEST_FAILURE'\nexport const REGISTER_REQUESTED = 'REGISTER_REQUESTED'\nexport const REGISTER_REQUEST_SUCCESS = 'REGISTER_REQUEST_SUCCESS'\nexport const REGISTER_REQUEST_FAILURE = 'REGISTER_REQUEST_FAILURE'\nexport const PUB_REQUESTED = 'PUB_REQUESTED'\nexport const PUB_REQUEST_SUCCESS = 'PUB_REQUEST_SUCCESS'\nexport const PUB_REQUEST_FAILURE = 'PUB_REQUEST_FAILURE'\nexport const UPLOAD_REQUESTED = 'UPLOAD_REQUESTED'\nexport const UPLOAD_REQUEST_SUCCESS = 'UPLOAD_REQUEST_SUCCESS'\nexport const UPLOAD_REQUEST_FAILURE = 'UPLOAD_REQUEST_FAILURE'\n\nexport const openapiRequestSuccess = (payload) => {\n    return {\n      type: OPENAPI_REQUEST_SUCCESS,\n      payload\n    }\n};\n\nexport const openapiRequested = (data) => {\n    return {\n        type: OPENAPI_REQUESTED,\n    }\n};\n\nexport const RegRequestSuccess = (payload) => {\n    return {\n      type: REGISTER_REQUEST_SUCCESS,\n      payload\n    }\n};\n\nexport const RegRequested = (data) => {\n    return {\n        type: REGISTER_REQUESTED,\n    }\n};\n\nexport const PubsRequestSuccess = (payload) => {\n    return {\n      type: PUB_REQUEST_SUCCESS,\n      payload\n    }\n};\n\nexport const PubsRequested = (data) => {\n    return {\n        type: PUB_REQUESTED,\n    }\n};\n\n\nexport const UploadRequestSuccess = (payload) => {\n    return {\n      type: UPLOAD_REQUEST_SUCCESS,\n      payload\n    }\n};\n\nexport const UploadRequested = (data) => {\n    return {\n        type: UPLOAD_REQUESTED,\n    }\n};\n\n\nexport const loadOpenApis = (page) => {\n    return (dispatch) => {\n        dispatch(openapiRequested()); \n\n        return axios.get(apiUrl)\n            .then(response => {\n                dispatch(openapiRequestSuccess(response.data))\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport const loadPubs = (page) => {\n    return (dispatch) => {\n        dispatch(PubsRequested()); \n\n        return axios.get(pubUrl)\n            .then(response => {\n                dispatch(PubsRequestSuccess(response.data))\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport const uploadAPI = (page) => {\n    console.log(page);\n    return (dispatch) => {\n        dispatch(UploadRequested()); \n\n        return axios.post(uploadUrl, page, {})\n            .then(response => {\n                dispatch(UploadRequestSuccess(response.data))\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport function register(companyInfo) {\n    return (dispatch) => {\n        dispatch(RegRequested()); \n        console.log(companyInfo);\n\n        return axios.post(registerPostUrl, companyInfo)\n            .then(response => {\n                dispatch(RegRequestSuccess(response.data))\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n}"]},"metadata":{},"sourceType":"module"}