{
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/controllers/UserController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/UserController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/controllers/UserController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/UserController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
        "sourceFileName": "UserController.js"
      }
    },
    "ast": null,
    "code": "const User = require('../models/User');\n\nconst authService = require('../services/auth.service');\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst UserController = () => {\n  const register = async (req, res) => {\n    const {\n      body\n    } = req;\n\n    if (body.password === body.password2) {\n      try {\n        const user = await User.create({\n          email: body.email,\n          password: body.password\n        });\n        const token = authService().issue({\n          id: user.id\n        });\n        return res.status(200).json({\n          token,\n          user\n        });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({\n          msg: 'Internal server error'\n        });\n      }\n    }\n\n    return res.status(400).json({\n      msg: 'Bad Request: Passwords don\\'t match'\n    });\n  };\n\n  const login = async (req, res) => {\n    const {\n      email,\n      password\n    } = req.body;\n\n    if (email && password) {\n      try {\n        const user = await User.findOne({\n          where: {\n            email\n          }\n        });\n\n        if (!user) {\n          return res.status(400).json({\n            msg: 'Bad Request: User not found'\n          });\n        }\n\n        if (bcryptService().comparePassword(password, user.password)) {\n          const token = authService().issue({\n            id: user.id\n          });\n          return res.status(200).json({\n            token,\n            user\n          });\n        }\n\n        return res.status(401).json({\n          msg: 'Unauthorized'\n        });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({\n          msg: 'Internal server error'\n        });\n      }\n    }\n\n    return res.status(400).json({\n      msg: 'Bad Request: Email or password is wrong'\n    });\n  };\n\n  const validate = (req, res) => {\n    const {\n      token\n    } = req.body;\n    authService().verify(token, err => {\n      if (err) {\n        return res.status(401).json({\n          isvalid: false,\n          err: 'Invalid Token!'\n        });\n      }\n\n      return res.status(200).json({\n        isvalid: true\n      });\n    });\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const users = await User.findAll();\n      return res.status(200).json({\n        users\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  return {\n    register,\n    login,\n    validate,\n    getAll\n  };\n};\n\nmodule.exports = UserController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwiYXV0aFNlcnZpY2UiLCJiY3J5cHRTZXJ2aWNlIiwiVXNlckNvbnRyb2xsZXIiLCJyZWdpc3RlciIsInJlcSIsInJlcyIsImJvZHkiLCJwYXNzd29yZCIsInBhc3N3b3JkMiIsInVzZXIiLCJjcmVhdGUiLCJlbWFpbCIsInRva2VuIiwiaXNzdWUiLCJpZCIsInN0YXR1cyIsImpzb24iLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibXNnIiwibG9naW4iLCJmaW5kT25lIiwid2hlcmUiLCJjb21wYXJlUGFzc3dvcmQiLCJ2YWxpZGF0ZSIsInZlcmlmeSIsImlzdmFsaWQiLCJnZXRBbGwiLCJ1c2VycyIsImZpbmRBbGwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFwQjs7QUFDQSxNQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQywwQkFBRCxDQUEzQjs7QUFDQSxNQUFNRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyw0QkFBRCxDQUE3Qjs7QUFFQSxNQUFNRyxjQUFjLEdBQUcsTUFBTTtBQUMzQixRQUFNQyxRQUFRLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQ25DLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFXRixHQUFqQjs7QUFFQSxRQUFJRSxJQUFJLENBQUNDLFFBQUwsS0FBa0JELElBQUksQ0FBQ0UsU0FBM0IsRUFBc0M7QUFDcEMsVUFBSTtBQUNGLGNBQU1DLElBQUksR0FBRyxNQUFNWCxJQUFJLENBQUNZLE1BQUwsQ0FBWTtBQUM3QkMsVUFBQUEsS0FBSyxFQUFFTCxJQUFJLENBQUNLLEtBRGlCO0FBRTdCSixVQUFBQSxRQUFRLEVBQUVELElBQUksQ0FBQ0M7QUFGYyxTQUFaLENBQW5CO0FBSUEsY0FBTUssS0FBSyxHQUFHWixXQUFXLEdBQUdhLEtBQWQsQ0FBb0I7QUFB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QUVELGFBQU9aLEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVXLFFBQUFBLE9BQU8sRUFBRTtBQUFYLE9BQXJCLENBQVA7QUFDRCxLQU5EO0FBT0QsR0FWRDs7QUFZQSxRQUFNQyxNQUFNLEdBQUcsT0FBT3hCLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUNqQyxRQUFJO0FBQ0YsWUFBTXdCLEtBQUssR0FBRyxNQUFNL0IsSUFBSSxDQUFDZ0MsT0FBTCxFQUFwQjtBQUVBLGFBQU96QixHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFYSxRQUFBQTtBQUFGLE9BQXJCLENBQVA7QUFDRCxLQUpELENBSUUsT0FBT1osR0FBUCxFQUFZO0FBQ1pDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaO0FBQ0EsYUFBT1osR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUksUUFBQUEsR0FBRyxFQUFFO0FBQVAsT0FBckIsQ0FBUDtBQUNEO0FBQ0YsR0FURDs7QUFZQSxTQUFPO0FBQ0xqQixJQUFBQSxRQURLO0FBRUxrQixJQUFBQSxLQUZLO0FBR0xJLElBQUFBLFFBSEs7QUFJTEcsSUFBQUE7QUFKSyxHQUFQO0FBTUQsQ0FwRkQ7O0FBc0ZBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI5QixjQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hyaXNmdS9vcGVuYXBpLnBvcnRhbC9zZXJ2ZXIvYXBpL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy9Vc2VyJyk7XG5jb25zdCBhdXRoU2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZScpO1xuY29uc3QgYmNyeXB0U2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2JjcnlwdC5zZXJ2aWNlJyk7XG5cbmNvbnN0IFVzZXJDb250cm9sbGVyID0gKCkgPT4ge1xuICBjb25zdCByZWdpc3RlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgYm9keSB9ID0gcmVxO1xuXG4gICAgaWYgKGJvZHkucGFzc3dvcmQgPT09IGJvZHkucGFzc3dvcmQyKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5jcmVhdGUoe1xuICAgICAgICAgIGVtYWlsOiBib2R5LmVtYWlsLFxuICAgICAgICAgIHBhc3N3b3JkOiBib2R5LnBhc3N3b3JkLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdG9rZW4gPSBhdXRoU2VydmljZSgpLmlzc3VlKHsgaWQ6IHVzZXIuaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdG9rZW4sIHVzZXIgfSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdCYWQgUmVxdWVzdDogUGFzc3dvcmRzIGRvblxcJ3QgbWF0Y2gnIH0pO1xuICB9O1xuXG4gIGNvbnN0IGxvZ2luID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKGVtYWlsICYmIHBhc3N3b3JkKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlclxuICAgICAgICAgIC5maW5kT25lKHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdCYWQgUmVxdWVzdDogVXNlciBub3QgZm91bmQnIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGJjcnlwdFNlcnZpY2UoKS5jb21wYXJlUGFzc3dvcmQocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpKSB7XG4gICAgICAgICAgY29uc3QgdG9rZW4gPSBhdXRoU2VydmljZSgpLmlzc3VlKHsgaWQ6IHVzZXIuaWQgfSk7XG5cbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyB0b2tlbiwgdXNlciB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1zZzogJ1VuYXV0aG9yaXplZCcgfSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtc2c6ICdCYWQgUmVxdWVzdDogRW1haWwgb3IgcGFzc3dvcmQgaXMgd3JvbmcnIH0pO1xuICB9O1xuXG4gIGNvbnN0IHZhbGlkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB0b2tlbiB9ID0gcmVxLmJvZHk7XG5cbiAgICBhdXRoU2VydmljZSgpLnZlcmlmeSh0b2tlbiwgKGVycikgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBpc3ZhbGlkOiBmYWxzZSwgZXJyOiAnSW52YWxpZCBUb2tlbiEnIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBpc3ZhbGlkOiB0cnVlIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IGdldEFsbCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1c2VycyA9IGF3YWl0IFVzZXIuZmluZEFsbCgpO1xuXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyB1c2VycyB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtc2c6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0pO1xuICAgIH1cbiAgfTtcblxuXG4gIHJldHVybiB7XG4gICAgcmVnaXN0ZXIsXG4gICAgbG9naW4sXG4gICAgdmFsaWRhdGUsXG4gICAgZ2V0QWxsLFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyQ29udHJvbGxlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "UserController.js"
      ],
      "names": [
        "User",
        "require",
        "authService",
        "bcryptService",
        "UserController",
        "register",
        "req",
        "res",
        "body",
        "password",
        "password2",
        "user",
        "create",
        "email",
        "token",
        "issue",
        "id",
        "status",
        "json",
        "err",
        "console",
        "log",
        "msg",
        "login",
        "findOne",
        "where",
        "comparePassword",
        "validate",
        "verify",
        "isvalid",
        "getAll",
        "users",
        "findAll",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "sourcesContent": [
        "const User = require('../models/User');\nconst authService = require('../services/auth.service');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst UserController = () => {\n  const register = async (req, res) => {\n    const { body } = req;\n\n    if (body.password === body.password2) {\n      try {\n        const user = await User.create({\n          email: body.email,\n          password: body.password,\n        });\n        const token = authService().issue({ id: user.id });\n\n        return res.status(200).json({ token, user });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({ msg: 'Internal server error' });\n      }\n    }\n\n    return res.status(400).json({ msg: 'Bad Request: Passwords don\\'t match' });\n  };\n\n  const login = async (req, res) => {\n    const { email, password } = req.body;\n\n    if (email && password) {\n      try {\n        const user = await User\n          .findOne({\n            where: {\n              email,\n            },\n          });\n\n        if (!user) {\n          return res.status(400).json({ msg: 'Bad Request: User not found' });\n        }\n\n        if (bcryptService().comparePassword(password, user.password)) {\n          const token = authService().issue({ id: user.id });\n\n          return res.status(200).json({ token, user });\n        }\n\n        return res.status(401).json({ msg: 'Unauthorized' });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({ msg: 'Internal server error' });\n      }\n    }\n\n    return res.status(400).json({ msg: 'Bad Request: Email or password is wrong' });\n  };\n\n  const validate = (req, res) => {\n    const { token } = req.body;\n\n    authService().verify(token, (err) => {\n      if (err) {\n        return res.status(401).json({ isvalid: false, err: 'Invalid Token!' });\n      }\n\n      return res.status(200).json({ isvalid: true });\n    });\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const users = await User.findAll();\n\n      return res.status(200).json({ users });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n\n  return {\n    register,\n    login,\n    validate,\n    getAll,\n  };\n};\n\nmodule.exports = UserController;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1565103255136
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/models/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/models/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/models/User.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\n\nvar mysql = require('mysql');\n\nconst hooks = {\n  beforeCreate(user) {\n    user.password = bcryptService().password(user); // eslint-disable-line no-param-reassign\n  }\n\n};\nconst tableName = 'users';\nconst User = sequelize.define('User', {\n  email: {\n    type: Sequelize.STRING,\n    unique: true\n  },\n  password: {\n    type: Sequelize.STRING\n  }\n}, {\n  hooks,\n  tableName\n}); // eslint-disable-next-line\n\nUser.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  delete values.password;\n  return values;\n};\n\nmodule.exports = User;\n/*\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\", //\n  password: \"\", //\n  database: \"spec_table\"\n});\n\ncon.connect(function(err) {\n  if (err) throw err;\n  con.query(\"SELECT id, name, description, version, source_repository FROM openapi_specs\", function (err, result, fields) {\n    if (err) throw err;\n    console.log(result);\n  });\n});\n\n*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsImJjcnlwdFNlcnZpY2UiLCJzZXF1ZWxpemUiLCJteXNxbCIsImhvb2tzIiwiYmVmb3JlQ3JlYXRlIiwidXNlciIsInBhc3N3b3JkIiwidGFibGVOYW1lIiwiVXNlciIsImRlZmluZSIsImVtYWlsIiwidHlwZSIsIlNUUklORyIsInVuaXF1ZSIsInByb3RvdHlwZSIsInRvSlNPTiIsInZhbHVlcyIsIk9iamVjdCIsImFzc2lnbiIsImdldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBekI7O0FBQ0EsTUFBTUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBN0I7O0FBRUEsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsdUJBQUQsQ0FBekI7O0FBQ0EsSUFBSUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxNQUFNSSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsWUFBWSxDQUFDQyxJQUFELEVBQU87QUFDakJBLElBQUFBLElBQUksQ0FBQ0MsUUFBTCxHQUFnQk4sYUFBYSxHQUFHTSxRQUFoQixDQUF5QkQsSUFBekIsQ0FBaEIsQ0FEaUIsQ0FDK0I7QUFDakQ7O0FBSFcsQ0FBZDtBQU1BLE1BQU1FLFNBQVMsR0FBRyxPQUFsQjtBQUVBLE1BQU1DLElBQUksR0FBR1AsU0FBUyxDQUFDUSxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ3BDQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFYixTQUFTLENBQUNjLE1BRFg7QUFFTEMsSUFBQUEsTUFBTSxFQUFFO0FBRkgsR0FENkI7QUFLcENQLEVBQUFBLFFBQVEsRUFBRTtBQUNSSyxJQUFBQSxJQUFJLEVBQUViLFNBQVMsQ0FBQ2M7QUFEUjtBQUwwQixDQUF6QixFQVFWO0FBQUVULEVBQUFBLEtBQUY7QUFBU0ksRUFBQUE7QUFBVCxDQVJVLENBQWIsQyxDQVVBOztBQUNBQyxJQUFJLENBQUNNLFNBQUwsQ0FBZUMsTUFBZixHQUF3QixZQUFZO0FBQ2xDLFFBQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxHQUFMLEVBQWxCLENBQWY7QUFFQSxTQUFPSCxNQUFNLENBQUNWLFFBQWQ7QUFFQSxTQUFPVSxNQUFQO0FBQ0QsQ0FORDs7QUFRQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixJQUFqQjtBQUVBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaHJpc2Z1L29wZW5hcGkucG9ydGFsL3NlcnZlci9hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBiY3J5cHRTZXJ2aWNlID0gcmVxdWlyZSgnLi4vc2VydmljZXMvYmNyeXB0LnNlcnZpY2UnKTtcblxuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vLi4vY29uZmlnL2RhdGFiYXNlJyk7XG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xuXG5jb25zdCBob29rcyA9IHtcbiAgYmVmb3JlQ3JlYXRlKHVzZXIpIHtcbiAgICB1c2VyLnBhc3N3b3JkID0gYmNyeXB0U2VydmljZSgpLnBhc3N3b3JkKHVzZXIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIH0sXG59O1xuXG5jb25zdCB0YWJsZU5hbWUgPSAndXNlcnMnO1xuXG5jb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgnVXNlcicsIHtcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICB9LFxufSwgeyBob29rcywgdGFibGVOYW1lIH0pO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcblVzZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgdmFsdWVzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5nZXQoKSk7XG5cbiAgZGVsZXRlIHZhbHVlcy5wYXNzd29yZDtcblxuICByZXR1cm4gdmFsdWVzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyO1xuXG4vKlxudmFyIGNvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICBob3N0OiBcImxvY2FsaG9zdFwiLFxuICB1c2VyOiBcInJvb3RcIiwgLy9cbiAgcGFzc3dvcmQ6IFwiXCIsIC8vXG4gIGRhdGFiYXNlOiBcInNwZWNfdGFibGVcIlxufSk7XG5cbmNvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gIGNvbi5xdWVyeShcIlNFTEVDVCBpZCwgbmFtZSwgZGVzY3JpcHRpb24sIHZlcnNpb24sIHNvdXJjZV9yZXBvc2l0b3J5IEZST00gb3BlbmFwaV9zcGVjc1wiLCBmdW5jdGlvbiAoZXJyLCByZXN1bHQsIGZpZWxkcykge1xuICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICB9KTtcbn0pO1xuXG4qLyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "bcryptService",
        "sequelize",
        "mysql",
        "hooks",
        "beforeCreate",
        "user",
        "password",
        "tableName",
        "User",
        "define",
        "email",
        "type",
        "STRING",
        "unique",
        "prototype",
        "toJSON",
        "values",
        "Object",
        "assign",
        "get",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,4BAAD,CAA7B;;AAEA,MAAME,SAAS,GAAGF,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMI,KAAK,GAAG;AACZC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjBA,IAAAA,IAAI,CAACC,QAAL,GAAgBN,aAAa,GAAGM,QAAhB,CAAyBD,IAAzB,CAAhB,CADiB,CAC+B;AACjD;;AAHW,CAAd;AAMA,MAAME,SAAS,GAAG,OAAlB;AAEA,MAAMC,IAAI,GAAGP,SAAS,CAACQ,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEb,SAAS,CAACc,MADX;AAELC,IAAAA,MAAM,EAAE;AAFH,GAD6B;AAKpCP,EAAAA,QAAQ,EAAE;AACRK,IAAAA,IAAI,EAAEb,SAAS,CAACc;AADR;AAL0B,CAAzB,EAQV;AAAET,EAAAA,KAAF;AAASI,EAAAA;AAAT,CARU,CAAb,C,CAUA;;AACAC,IAAI,CAACM,SAAL,CAAeC,MAAf,GAAwB,YAAY;AAClC,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAL,EAAlB,CAAf;AAEA,SAAOH,MAAM,CAACV,QAAd;AAEA,SAAOU,MAAP;AACD,CAND;;AAQAI,MAAM,CAACC,OAAP,GAAiBb,IAAjB;AAEA",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\nvar mysql = require('mysql');\n\nconst hooks = {\n  beforeCreate(user) {\n    user.password = bcryptService().password(user); // eslint-disable-line no-param-reassign\n  },\n};\n\nconst tableName = 'users';\n\nconst User = sequelize.define('User', {\n  email: {\n    type: Sequelize.STRING,\n    unique: true,\n  },\n  password: {\n    type: Sequelize.STRING,\n  },\n}, { hooks, tableName });\n\n// eslint-disable-next-line\nUser.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n\n  delete values.password;\n\n  return values;\n};\n\nmodule.exports = User;\n\n/*\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\", //\n  password: \"\", //\n  database: \"spec_table\"\n});\n\ncon.connect(function(err) {\n  if (err) throw err;\n  con.query(\"SELECT id, name, description, version, source_repository FROM openapi_specs\", function (err, result, fields) {\n    if (err) throw err;\n    console.log(result);\n  });\n});\n\n*/"
      ]
    },
    "sourceType": "module",
    "mtime": 1565214514405
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/controllers/SpecController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/SpecController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/controllers/SpecController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/SpecController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
        "sourceFileName": "SpecController.js"
      }
    },
    "ast": null,
    "code": "const Spec = require('../models/Spec.js');\n\nconst Category = require('../models/Category.js');\n\nconst Publisher = require('../models/Publisher.js');\n\nconst authService = require('../services/auth.service');\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst express = require('express');\n\nconst app = express();\n\nconst multer = require('multer');\n\nconst cors = require('cors');\n\napp.use(cors());\n\nconst SwaggerParser = require('swagger-parser');\n/*\nconst multer = require('multer')\n\nvar storage = multer.memoryStorage()\nvar upload = multer({ storage: storage }).single(\"file\");\n*/\n\n\nconst SpecController = () => {\n  const register = async (req, res) => {\n    console.log(\"received\" + req.file);\n    console.log(req.body.categoryId);\n    SwaggerParser.validate(req.file.path, (err, api) => {\n      if (err) {\n        console.error(err);\n      } else {\n        console.log(\"API name: %s, Version: %s, BODY TITLE: %s\", api.info.title, api.info.version, req.body.apiName);\n        console.log(\"NM: \" + (!req.body.apiName || req.body.apiName == null || req.body.apiName == ''));\n\n        try {\n          const data = Spec.create({\n            name: !req.body.apiName || req.body.apiName == null || req.body.apiName == '' || req.body.apiName == 'null' ? api.info.title : req.body.apiName,\n            description: api.info.description,\n            spec: SwaggerParser.YAML.stringify(api),\n            version: api.info.version,\n            source_repository: api.info[\"x-origin\"].url,\n            avatar_url: api.info[\"x-logo\"].url,\n            category_id: req.body.categoryId\n          });\n          const token = authService().issue({\n            id: data.id\n          }); //console.log(data);\n\n          return res.status(200).json({\n            msg: 'Success!'\n          });\n        } catch (err) {\n          console.log(err);\n          return res.status(500).json({\n            msg: 'Internal server error'\n          });\n        }\n      }\n    }); //return res.status(500).json({msg: 'error!'});\n  };\n\n  const validate = (req, res) => {\n    const {\n      token\n    } = req.body;\n    authService().verify(token, err => {\n      if (err) {\n        return res.status(401).json({\n          isvalid: false,\n          err: 'Invalid Token!'\n        });\n      }\n\n      return res.status(200).json({\n        isvalid: true\n      });\n    });\n  };\n\n  const getOne = async (req, res) => {\n    try {\n      const api = await Spec.findOne({\n        where: {\n          id: req.params.id\n        },\n        order: [['publisher_id', 'DESC']]\n      });\n      res.set('Content-Type', 'application/json');\n      return res.send(api.spec);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const apis = await Spec.findAndCountAll({\n        attributes: ['id', 'name', 'description', 'spec', 'avatar_url', 'num_comments'],\n        limit: 5,\n        offset: 5 * (req.params.page - 1),\n        order: [// Will escape title and validate DESC against a list of valid direction parameters\n        ['id', 'ASC']],\n        include: [{\n          as: 'category',\n          model: Category,\n          attributes: [['name', 'categoryName']]\n        }, {\n          as: 'publisher',\n          model: Publisher\n        }]\n      });\n      return res.status(200).json({\n        apis: apis.rows,\n        total: apis.count\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  return {\n    register,\n    validate,\n    getAll,\n    getOne\n  };\n};\n\nmodule.exports = SpecController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "SpecController.js"
      ],
      "names": [
        "Spec",
        "require",
        "Category",
        "Publisher",
        "authService",
        "bcryptService",
        "express",
        "app",
        "multer",
        "cors",
        "use",
        "SwaggerParser",
        "SpecController",
        "register",
        "req",
        "res",
        "console",
        "log",
        "file",
        "body",
        "categoryId",
        "validate",
        "path",
        "err",
        "api",
        "error",
        "info",
        "title",
        "version",
        "apiName",
        "data",
        "create",
        "name",
        "description",
        "spec",
        "YAML",
        "stringify",
        "source_repository",
        "url",
        "avatar_url",
        "category_id",
        "token",
        "issue",
        "id",
        "status",
        "json",
        "msg",
        "verify",
        "isvalid",
        "getOne",
        "findOne",
        "where",
        "params",
        "order",
        "set",
        "send",
        "getAll",
        "apis",
        "findAndCountAll",
        "attributes",
        "limit",
        "offset",
        "page",
        "include",
        "as",
        "model",
        "rows",
        "total",
        "count",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "sourcesContent": [
        "const Spec = require('../models/Spec.js');\nconst Category = require('../models/Category.js');\nconst Publisher = require('../models/Publisher.js');\n\n\nconst authService = require('../services/auth.service');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst express = require('express');\nconst app = express();\nconst multer = require('multer')\nconst cors = require('cors');\napp.use(cors());\nconst SwaggerParser = require('swagger-parser');\n\n\n\n/*\nconst multer = require('multer')\n\nvar storage = multer.memoryStorage()\nvar upload = multer({ storage: storage }).single(\"file\");\n*/\n\nconst SpecController = () => {\n  const register = async (req, res) => {\n    console.log(\"received\" + req.file);\n    console.log(req.body.categoryId);\n\n    SwaggerParser.validate(req.file.path, (err, api) => {\n      if (err) {\n        console.error(err);\n      }\n      else {\n        console.log(\"API name: %s, Version: %s, BODY TITLE: %s\", api.info.title, api.info.version, req.body.apiName);\n        console.log(\"NM: \" + (!req.body.apiName || req.body.apiName == null || req.body.apiName == '') ); \n        try {\n          const data = Spec.create({\n            name: (!req.body.apiName || req.body.apiName == null || req.body.apiName == '' || req.body.apiName == 'null') ? api.info.title : req.body.apiName,\n            description: api.info.description,\n            spec: SwaggerParser.YAML.stringify(api),\n            version: api.info.version,\n            source_repository: api.info[\"x-origin\"].url,\n            avatar_url: api.info[\"x-logo\"].url,\n            category_id: req.body.categoryId\n          });\n          const token = authService().issue({ id: data.id });\n          //console.log(data);\n    \n         return res.status(200).json({ msg: 'Success!' });\n        } catch (err) {\n          console.log(err);\n          return res.status(500).json({ msg: 'Internal server error' });\n        }\n        \n      }\n    });\n\n\n\n    \n    //return res.status(500).json({msg: 'error!'});\n\n  };\n\n\n\n  const validate = (req, res) => {\n    const { token } = req.body;\n\n    authService().verify(token, (err) => {\n      if (err) {\n        return res.status(401).json({ isvalid: false, err: 'Invalid Token!' });\n      }\n\n      return res.status(200).json({ isvalid: true });\n    });\n  };\n\n  \n  const getOne = async (req, res) => {\n    try {\n      const api = await Spec.findOne({\n        where: {\n          id: req.params.id\n        }\n        ,order: [['publisher_id', 'DESC']],\n      });\n      res.set('Content-Type', 'application/json');\n      return res.send(api.spec);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n  \n\n\n  const getAll = async (req, res) => {\n    try {\n      const apis = await Spec.findAndCountAll({\n        attributes:[\n          'id', 'name', 'description', 'spec', 'avatar_url', 'num_comments'\n        ],\n        limit: 5,\n        offset: 5*(req.params.page-1),\n        order: [\n          // Will escape title and validate DESC against a list of valid direction parameters\n          ['id', 'ASC']],\n        \n        include: [{\n          as: 'category', \n          model: Category,\n          attributes: [['name', 'categoryName']]\n        },\n        {\n          as: 'publisher',\n          model: Publisher,\n        }]\n      });\n      return res.status(200).json({ apis: apis.rows, total: apis.count });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n  \n\n\n  return {\n    register,\n    validate,\n    getAll,\n    getOne\n  };\n};\n\nmodule.exports = SpecController;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572305030873
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/models/Get.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/models/Get.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/models/Get.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/models/Get.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
        "sourceFileName": "Get.js"
      }
    },
    "ast": null,
    "code": "/*\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\", //\n  password: \"\", //\n  database: \"spec_table\"\n});\n\ncon.connect(function(err) {\n  if (err) throw err;\n  con.query(\"SELECT id, name, description, version, source_repository FROM openapi_specs\", function (err, result, fields) {\n    if (err) throw err;\n    console.log(result);\n  });\n});\n*/\nconst Sequelize = require('sequelize'); //var mysql = require('mysql');\n\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\n/*\nconst hooks = {\n  beforeCreate(user) {\n    user.password = bcryptService().password(user); // eslint-disable-line no-param-reassign\n  },\n};\n*/\n\n\nconst tableName = 'openapi_spec';\nconst Spec = sequelize.define('Spec', {\n  id: {\n    type: Sequelize.STRING,\n    unique: true,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.STRING\n  },\n  description: {\n    type: Sequelize.STRING\n  },\n  spec: {\n    type: Sequelize.STRING\n  },\n  version: {\n    type: Sequelize.STRING\n  },\n  source_repository: {\n    type: Sequelize.STRING\n  },\n  avatar_url: {\n    type: Sequelize.STRING\n  },\n  created_on: {\n    type: Sequelize.STRING\n  },\n  created_by: {\n    type: Sequelize.STRING\n  }\n}, {\n  hooks,\n  tableName\n}); // eslint-disable-next-line\n\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  return values;\n};\n\nmodule.exports = Spec;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdldC5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwiYmNyeXB0U2VydmljZSIsInNlcXVlbGl6ZSIsInRhYmxlTmFtZSIsIlNwZWMiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJTVFJJTkciLCJ1bmlxdWUiLCJwcmltYXJ5S2V5IiwibmFtZSIsImRlc2NyaXB0aW9uIiwic3BlYyIsInZlcnNpb24iLCJzb3VyY2VfcmVwb3NpdG9yeSIsImF2YXRhcl91cmwiLCJjcmVhdGVkX29uIiwiY3JlYXRlZF9ieSIsImhvb2tzIiwicHJvdG90eXBlIiwidG9KU09OIiwidmFsdWVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6QixDLENBQ0E7OztBQUNBLE1BQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLDRCQUFELENBQTdCOztBQUVBLE1BQU1FLFNBQVMsR0FBR0YsT0FBTyxDQUFDLHVCQUFELENBQXpCO0FBRUE7Ozs7Ozs7OztBQVFBLE1BQU1HLFNBQVMsR0FBRyxjQUFsQjtBQUVBLE1BQU1DLElBQUksR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ3BDQyxFQUFBQSxFQUFFLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNTLE1BRGQ7QUFFRkMsSUFBQUEsTUFBTSxFQUFFLElBRk47QUFHRkMsSUFBQUEsVUFBVSxFQUFFO0FBSFYsR0FEZ0M7QUFNcENDLEVBQUFBLElBQUksRUFBRTtBQUNKSixJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ1M7QUFEWixHQU44QjtBQVNwQ0ksRUFBQUEsV0FBVyxFQUFFO0FBQ1hMLElBQUFBLElBQUksRUFBRVIsU0FBUyxDQUFDUztBQURMLEdBVHVCO0FBWXBDSyxFQUFBQSxJQUFJLEVBQUU7QUFDSk4sSUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNTO0FBRFosR0FaOEI7QUFlcENNLEVBQUFBLE9BQU8sRUFBRTtBQUNQUCxJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ1M7QUFEVCxHQWYyQjtBQWtCcENPLEVBQUFBLGlCQUFpQixFQUFFO0FBQ2pCUixJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ1M7QUFEQyxHQWxCaUI7QUFxQnBDUSxFQUFBQSxVQUFVLEVBQUU7QUFDVlQsSUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNTO0FBRE4sR0FyQndCO0FBd0JwQ1MsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZWLElBQUFBLElBQUksRUFBRVIsU0FBUyxDQUFDUztBQUROLEdBeEJ3QjtBQTJCcENVLEVBQUFBLFVBQVUsRUFBRTtBQUNWWCxJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ1M7QUFETjtBQTNCd0IsQ0FBekIsRUE4QlY7QUFBRVcsRUFBQUEsS0FBRjtBQUFTaEIsRUFBQUE7QUFBVCxDQTlCVSxDQUFiLEMsQ0FnQ0E7O0FBQ0FDLElBQUksQ0FBQ2dCLFNBQUwsQ0FBZUMsTUFBZixHQUF3QixZQUFZO0FBQ2xDLFFBQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxHQUFMLEVBQWxCLENBQWY7QUFFQSxTQUFPSCxNQUFQO0FBQ0QsQ0FKRDs7QUFNQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCdkIsSUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NocmlzZnUvb3BlbmFwaS5wb3J0YWwvc2VydmVyL2FwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qXG52YXIgY29uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gIGhvc3Q6IFwibG9jYWxob3N0XCIsXG4gIHVzZXI6IFwicm9vdFwiLCAvL1xuICBwYXNzd29yZDogXCJcIiwgLy9cbiAgZGF0YWJhc2U6IFwic3BlY190YWJsZVwiXG59KTtcblxuY29uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7XG4gIGlmIChlcnIpIHRocm93IGVycjtcbiAgY29uLnF1ZXJ5KFwiU0VMRUNUIGlkLCBuYW1lLCBkZXNjcmlwdGlvbiwgdmVyc2lvbiwgc291cmNlX3JlcG9zaXRvcnkgRlJPTSBvcGVuYXBpX3NwZWNzXCIsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCwgZmllbGRzKSB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gIH0pO1xufSk7XG4qL1xuXG5cbmNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuLy92YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xuY29uc3QgYmNyeXB0U2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2JjcnlwdC5zZXJ2aWNlJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZy9kYXRhYmFzZScpO1xuXG4vKlxuY29uc3QgaG9va3MgPSB7XG4gIGJlZm9yZUNyZWF0ZSh1c2VyKSB7XG4gICAgdXNlci5wYXNzd29yZCA9IGJjcnlwdFNlcnZpY2UoKS5wYXNzd29yZCh1c2VyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICB9LFxufTtcbiovXG5cbmNvbnN0IHRhYmxlTmFtZSA9ICdvcGVuYXBpX3NwZWMnO1xuXG5jb25zdCBTcGVjID0gc2VxdWVsaXplLmRlZmluZSgnU3BlYycsIHtcbiAgaWQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICB9LFxuICBuYW1lOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgfSxcbiAgZGVzY3JpcHRpb246IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICB9LFxuICBzcGVjOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgfSxcbiAgdmVyc2lvbjoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIH0sXG4gIHNvdXJjZV9yZXBvc2l0b3J5OiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgfSxcbiAgYXZhdGFyX3VybDoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIH0sXG4gIGNyZWF0ZWRfb246IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICB9LFxuICBjcmVhdGVkX2J5OiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgfSxcbn0sIHsgaG9va3MsIHRhYmxlTmFtZSB9KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5TcGVjLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHZhbHVlcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZ2V0KCkpO1xuXG4gIHJldHVybiB2YWx1ZXM7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNwZWM7XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Get.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "bcryptService",
        "sequelize",
        "tableName",
        "Spec",
        "define",
        "id",
        "type",
        "STRING",
        "unique",
        "primaryKey",
        "name",
        "description",
        "spec",
        "version",
        "source_repository",
        "avatar_url",
        "created_on",
        "created_by",
        "hooks",
        "prototype",
        "toJSON",
        "values",
        "Object",
        "assign",
        "get",
        "module",
        "exports"
      ],
      "mappings": "AACA;;;;;;;;;;;;;;;;AAkBA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB,C,CACA;;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,4BAAD,CAA7B;;AAEA,MAAME,SAAS,GAAGF,OAAO,CAAC,uBAAD,CAAzB;AAEA;;;;;;;;;AAQA,MAAMG,SAAS,GAAG,cAAlB;AAEA,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAER,SAAS,CAACS,MADd;AAEFC,IAAAA,MAAM,EAAE,IAFN;AAGFC,IAAAA,UAAU,EAAE;AAHV,GADgC;AAMpCC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAER,SAAS,CAACS;AADZ,GAN8B;AASpCI,EAAAA,WAAW,EAAE;AACXL,IAAAA,IAAI,EAAER,SAAS,CAACS;AADL,GATuB;AAYpCK,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAER,SAAS,CAACS;AADZ,GAZ8B;AAepCM,EAAAA,OAAO,EAAE;AACPP,IAAAA,IAAI,EAAER,SAAS,CAACS;AADT,GAf2B;AAkBpCO,EAAAA,iBAAiB,EAAE;AACjBR,IAAAA,IAAI,EAAER,SAAS,CAACS;AADC,GAlBiB;AAqBpCQ,EAAAA,UAAU,EAAE;AACVT,IAAAA,IAAI,EAAER,SAAS,CAACS;AADN,GArBwB;AAwBpCS,EAAAA,UAAU,EAAE;AACVV,IAAAA,IAAI,EAAER,SAAS,CAACS;AADN,GAxBwB;AA2BpCU,EAAAA,UAAU,EAAE;AACVX,IAAAA,IAAI,EAAER,SAAS,CAACS;AADN;AA3BwB,CAAzB,EA8BV;AAAEW,EAAAA,KAAF;AAAShB,EAAAA;AAAT,CA9BU,CAAb,C,CAgCA;;AACAC,IAAI,CAACgB,SAAL,CAAeC,MAAf,GAAwB,YAAY;AAClC,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAL,EAAlB,CAAf;AAEA,SAAOH,MAAP;AACD,CAJD;;AAMAI,MAAM,CAACC,OAAP,GAAiBvB,IAAjB",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "sourcesContent": [
        "\n/*\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\", //\n  password: \"\", //\n  database: \"spec_table\"\n});\n\ncon.connect(function(err) {\n  if (err) throw err;\n  con.query(\"SELECT id, name, description, version, source_repository FROM openapi_specs\", function (err, result, fields) {\n    if (err) throw err;\n    console.log(result);\n  });\n});\n*/\n\n\nconst Sequelize = require('sequelize');\n//var mysql = require('mysql');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\n\n/*\nconst hooks = {\n  beforeCreate(user) {\n    user.password = bcryptService().password(user); // eslint-disable-line no-param-reassign\n  },\n};\n*/\n\nconst tableName = 'openapi_spec';\n\nconst Spec = sequelize.define('Spec', {\n  id: {\n    type: Sequelize.STRING,\n    unique: true,\n    primaryKey: true,\n  },\n  name: {\n    type: Sequelize.STRING,\n  },\n  description: {\n    type: Sequelize.STRING,\n  },\n  spec: {\n    type: Sequelize.STRING,\n  },\n  version: {\n    type: Sequelize.STRING,\n  },\n  source_repository: {\n    type: Sequelize.STRING,\n  },\n  avatar_url: {\n    type: Sequelize.STRING,\n  },\n  created_on: {\n    type: Sequelize.STRING,\n  },\n  created_by: {\n    type: Sequelize.STRING,\n  },\n}, { hooks, tableName });\n\n// eslint-disable-next-line\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n\n  return values;\n};\n\nmodule.exports = Spec;\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1565294999414
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/controllers/PublisherController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/PublisherController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/controllers/PublisherController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/PublisherController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
        "sourceFileName": "PublisherController.js"
      }
    },
    "ast": null,
    "code": "const Publisher = require('../models/Publisher.js');\n\nconst authService = require('../services/auth.service');\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst PublisherController = () => {\n  const register = async (req, res) => {\n    const {\n      body\n    } = req;\n\n    try {\n      const user = await Publisher.create({\n        email: body.email,\n        name: body.name,\n        web_address: body.web,\n        point_of_contact: body.contact\n      });\n      const token = authService().issue({\n        id: user.id\n      });\n      console.log(user);\n      /*\n      try {\n        const pub = await Publisher.write(user);\n        return res.status(200).json({ user });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({ msg: 'Internal server error' });\n      } \n      */\n\n      return res.status(200).json({\n        msg: 'Success!'\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  const login = async (req, res) => {\n    const {\n      email,\n      password\n    } = req.body;\n\n    if (email && password) {\n      try {\n        const user = await User.findOne({\n          where: {\n            email\n          }\n        });\n\n        if (!user) {\n          return res.status(400).json({\n            msg: 'Bad Request: User not found'\n          });\n        }\n\n        if (bcryptService().comparePassword(password, user.password)) {\n          const token = authService().issue({\n            id: user.id\n          });\n          return res.status(200).json({\n            token,\n            user\n          });\n        }\n\n        return res.status(401).json({\n          msg: 'Unauthorized'\n        });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({\n          msg: 'Internal server error'\n        });\n      }\n    }\n\n    return res.status(400).json({\n      msg: 'Bad Request: Email or password is wrong'\n    });\n  };\n\n  const validate = (req, res) => {\n    const {\n      token\n    } = req.body;\n    authService().verify(token, err => {\n      if (err) {\n        return res.status(401).json({\n          isvalid: false,\n          err: 'Invalid Token!'\n        });\n      }\n\n      return res.status(200).json({\n        isvalid: true\n      });\n    });\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const pub = await Publisher.findAll();\n      return res.status(200).json({\n        publishers: pub,\n        total: pub.length\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  return {\n    register,\n    login,\n    validate,\n    getAll\n  };\n};\n\nmodule.exports = PublisherController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "PublisherController.js"
      ],
      "names": [
        "Publisher",
        "require",
        "authService",
        "bcryptService",
        "PublisherController",
        "register",
        "req",
        "res",
        "body",
        "user",
        "create",
        "email",
        "name",
        "web_address",
        "web",
        "point_of_contact",
        "contact",
        "token",
        "issue",
        "id",
        "console",
        "log",
        "status",
        "json",
        "msg",
        "err",
        "login",
        "password",
        "User",
        "findOne",
        "where",
        "comparePassword",
        "validate",
        "verify",
        "isvalid",
        "getAll",
        "pub",
        "findAll",
        "publishers",
        "total",
        "length",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAzB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,4BAAD,CAA7B;;AAGA,MAAMG,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,UAAM;AAAEC,MAAAA;AAAF,QAAWF,GAAjB;;AAIA,QAAI;AACF,YAAMG,IAAI,GAAG,MAAMT,SAAS,CAACU,MAAV,CAAiB;AAClCC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KADsB;AAElCC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFuB;AAGlCC,QAAAA,WAAW,EAAEL,IAAI,CAACM,GAHgB;AAIlCC,QAAAA,gBAAgB,EAAEP,IAAI,CAACQ;AAJW,OAAjB,CAAnB;AAMA,YAAMC,KAAK,GAAGf,WAAW,GAAGgB,KAAd,CAAoB;AAAEC,QAAAA,EAAE,EAAEV,IAAI,CAACU;AAAX,OAApB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA;;;;;;;;;;AASD,aAAOF,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAArB,CAAP;AACA,KAnBD,CAmBE,OAAOC,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,aAAOlB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAArB,CAAP;AACD;AACF,GA5BD;;AA8BA,QAAME,KAAK,GAAG,OAAOpB,GAAP,EAAYC,GAAZ,KAAoB;AAChC,UAAM;AAAEI,MAAAA,KAAF;AAASgB,MAAAA;AAAT,QAAsBrB,GAAG,CAACE,IAAhC;;AAEA,QAAIG,KAAK,IAAIgB,QAAb,EAAuB;AACrB,UAAI;AACF,cAAMlB,IAAI,GAAG,MAAMmB,IAAI,CACpBC,OADgB,CACR;AACPC,UAAAA,KAAK,EAAE;AACLnB,YAAAA;AADK;AADA,SADQ,CAAnB;;AAOA,YAAI,CAACF,IAAL,EAAW;AACT,iBAAOF,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,GAAG,EAAE;AAAP,WAArB,CAAP;AACD;;AAED,YAAIrB,aAAa,GAAG4B,eAAhB,CAAgCJ,QAAhC,EAA0ClB,IAAI,CAACkB,QAA/C,CAAJ,EAA8D;AAC5D,gBAAMV,KAAK,GAAGf,WAAW,GAAGgB,KAAd,CAAoB;AAAEC,YAAAA,EAAE,EAAEV,IAAI,CAACU;AAAX,WAApB,CAAd;AAEA,iBAAOZ,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEN,YAAAA,KAAF;AAASR,YAAAA;AAAT,WAArB,CAAP;AACD;;AAED,eAAOF,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,GAAG,EAAE;AAAP,SAArB,CAAP;AACD,OAnBD,CAmBE,OAAOC,GAAP,EAAY;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,eAAOlB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,GAAG,EAAE;AAAP,SAArB,CAAP;AACD;AACF;;AAED,WAAOjB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD,GA9BD;;AAgCA,QAAMQ,QAAQ,GAAG,CAAC1B,GAAD,EAAMC,GAAN,KAAc;AAC7B,UAAM;AAAEU,MAAAA;AAAF,QAAYX,GAAG,CAACE,IAAtB;AAEAN,IAAAA,WAAW,GAAG+B,MAAd,CAAqBhB,KAArB,EAA6BQ,GAAD,IAAS;AACnC,UAAIA,GAAJ,EAAS;AACP,eAAOlB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEW,UAAAA,OAAO,EAAE,KAAX;AAAkBT,UAAAA,GAAG,EAAE;AAAvB,SAArB,CAAP;AACD;;AAED,aAAOlB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEW,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD,KAND;AAOD,GAVD;;AAYA,QAAMC,MAAM,GAAG,OAAO7B,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAI;AACF,YAAM6B,GAAG,GAAG,MAAMpC,SAAS,CAACqC,OAAV,EAAlB;AACA,aAAO9B,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,QAAAA,UAAU,EAAEF,GAAd;AAAmBG,QAAAA,KAAK,EAAEH,GAAG,CAACI;AAA9B,OAArB,CAAP;AACD,KAHD,CAGE,OAAOf,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,aAAOlB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAArB,CAAP;AACD;AACF,GARD;;AAWA,SAAO;AACLnB,IAAAA,QADK;AAELqB,IAAAA,KAFK;AAGLM,IAAAA,QAHK;AAILG,IAAAA;AAJK,GAAP;AAMD,CA5FD;;AA8FAM,MAAM,CAACC,OAAP,GAAiBtC,mBAAjB",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "sourcesContent": [
        "const Publisher = require('../models/Publisher.js');\nconst authService = require('../services/auth.service');\nconst bcryptService = require('../services/bcrypt.service');\n\n\nconst PublisherController = () => {\n  const register = async (req, res) => {\n    const { body } = req;\n    \n\n    \n    try {\n      const user = await Publisher.create({\n        email: body.email,\n        name: body.name,\n        web_address: body.web,\n        point_of_contact: body.contact,\n      });\n      const token = authService().issue({ id: user.id });\n      console.log(user);\n      /*\n      try {\n        const pub = await Publisher.write(user);\n        return res.status(200).json({ user });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({ msg: 'Internal server error' });\n      } \n      */\n     return res.status(200).json({ msg: 'Success!' });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n  const login = async (req, res) => {\n    const { email, password } = req.body;\n\n    if (email && password) {\n      try {\n        const user = await User\n          .findOne({\n            where: {\n              email,\n            },\n          });\n\n        if (!user) {\n          return res.status(400).json({ msg: 'Bad Request: User not found' });\n        }\n\n        if (bcryptService().comparePassword(password, user.password)) {\n          const token = authService().issue({ id: user.id });\n\n          return res.status(200).json({ token, user });\n        }\n\n        return res.status(401).json({ msg: 'Unauthorized' });\n      } catch (err) {\n        console.log(err);\n        return res.status(500).json({ msg: 'Internal server error' });\n      }\n    }\n\n    return res.status(400).json({ msg: 'Bad Request: Email or password is wrong' });\n  };\n\n  const validate = (req, res) => {\n    const { token } = req.body;\n\n    authService().verify(token, (err) => {\n      if (err) {\n        return res.status(401).json({ isvalid: false, err: 'Invalid Token!' });\n      }\n\n      return res.status(200).json({ isvalid: true });\n    });\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const pub = await Publisher.findAll();\n      return res.status(200).json({ publishers: pub, total: pub.length});\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n\n  return {\n    register,\n    login,\n    validate,\n    getAll,\n  };\n};\n\nmodule.exports = PublisherController;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1565999250895
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/models/Publisher.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/models/Publisher.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/models/Publisher.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/models/Publisher.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
        "sourceFileName": "Publisher.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize'); //var mysql = require('mysql');\n\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\n\nconst tableName = 'publisher';\nconst Publisher = sequelize.define('Publisher', {\n  id: {\n    type: Sequelize.INTEGER,\n    unique: true,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  name: {\n    type: Sequelize.STRING\n  },\n  point_of_contact: {\n    type: Sequelize.STRING\n  },\n  email: {\n    type: Sequelize.STRING\n  },\n  web_address: {\n    type: Sequelize.STRING\n  }\n}, {\n  tableName\n}); // eslint-disable-next-line\n\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  return values;\n};\n\nmodule.exports = Spec;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlB1Ymxpc2hlci5qcyJdLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwiYmNyeXB0U2VydmljZSIsInNlcXVlbGl6ZSIsInRhYmxlTmFtZSIsIlB1Ymxpc2hlciIsImRlZmluZSIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJ1bmlxdWUiLCJwcmltYXJ5S2V5IiwiYXV0b0luY3JlbWVudCIsIm5hbWUiLCJTVFJJTkciLCJwb2ludF9vZl9jb250YWN0IiwiZW1haWwiLCJ3ZWJfYWRkcmVzcyIsIlNwZWMiLCJwcm90b3R5cGUiLCJ0b0pTT04iLCJ2YWx1ZXMiLCJPYmplY3QiLCJhc3NpZ24iLCJnZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXpCLEMsQ0FDQTs7O0FBQ0EsTUFBTUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBN0I7O0FBRUEsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsdUJBQUQsQ0FBekI7O0FBRUEsTUFBTUcsU0FBUyxHQUFHLFdBQWxCO0FBRUEsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDOUNDLEVBQUFBLEVBQUUsRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ1MsT0FEZDtBQUVGQyxJQUFBQSxNQUFNLEVBQUUsSUFGTjtBQUdGQyxJQUFBQSxVQUFVLEVBQUUsSUFIVjtBQUlGQyxJQUFBQSxhQUFhLEVBQUU7QUFKYixHQUQwQztBQU85Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pMLElBQUFBLElBQUksRUFBRVIsU0FBUyxDQUFDYztBQURaLEdBUHdDO0FBVTlDQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNoQlAsSUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNjO0FBREEsR0FWNEI7QUFhOUNFLEVBQUFBLEtBQUssRUFBRTtBQUNMUixJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ2M7QUFEWCxHQWJ1QztBQWdCOUNHLEVBQUFBLFdBQVcsRUFBRTtBQUNYVCxJQUFBQSxJQUFJLEVBQUVSLFNBQVMsQ0FBQ2M7QUFETDtBQWhCaUMsQ0FBOUIsRUFtQmY7QUFBRVYsRUFBQUE7QUFBRixDQW5CZSxDQUFsQixDLENBcUJBOztBQUNBYyxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsTUFBZixHQUF3QixZQUFZO0FBQ2xDLFFBQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxHQUFMLEVBQWxCLENBQWY7QUFDQSxTQUFPSCxNQUFQO0FBQ0QsQ0FIRDs7QUFLQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hyaXNmdS9vcGVuYXBpLnBvcnRhbC9zZXJ2ZXIvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuLy92YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xuY29uc3QgYmNyeXB0U2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2JjcnlwdC5zZXJ2aWNlJyk7XG5cbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZy9kYXRhYmFzZScpO1xuXG5jb25zdCB0YWJsZU5hbWUgPSAncHVibGlzaGVyJztcblxuY29uc3QgUHVibGlzaGVyID0gc2VxdWVsaXplLmRlZmluZSgnUHVibGlzaGVyJywge1xuICBpZDoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gIH0sXG4gIG5hbWU6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICB9LFxuICBwb2ludF9vZl9jb250YWN0OiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlNUUklORyxcbiAgfSxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HLFxuICB9LFxuICB3ZWJfYWRkcmVzczoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG4gIH0sXG59LCB7IHRhYmxlTmFtZSB9KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5TcGVjLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHZhbHVlcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZ2V0KCkpO1xuICByZXR1cm4gdmFsdWVzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTcGVjO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Publisher.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "bcryptService",
        "sequelize",
        "tableName",
        "Publisher",
        "define",
        "id",
        "type",
        "INTEGER",
        "unique",
        "primaryKey",
        "autoIncrement",
        "name",
        "STRING",
        "point_of_contact",
        "email",
        "web_address",
        "Spec",
        "prototype",
        "toJSON",
        "values",
        "Object",
        "assign",
        "get",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB,C,CACA;;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,4BAAD,CAA7B;;AAEA,MAAME,SAAS,GAAGF,OAAO,CAAC,uBAAD,CAAzB;;AAEA,MAAMG,SAAS,GAAG,WAAlB;AAEA,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAER,SAAS,CAACS,OADd;AAEFC,IAAAA,MAAM,EAAE,IAFN;AAGFC,IAAAA,UAAU,EAAE,IAHV;AAIFC,IAAAA,aAAa,EAAE;AAJb,GAD0C;AAO9CC,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAER,SAAS,CAACc;AADZ,GAPwC;AAU9CC,EAAAA,gBAAgB,EAAE;AAChBP,IAAAA,IAAI,EAAER,SAAS,CAACc;AADA,GAV4B;AAa9CE,EAAAA,KAAK,EAAE;AACLR,IAAAA,IAAI,EAAER,SAAS,CAACc;AADX,GAbuC;AAgB9CG,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAER,SAAS,CAACc;AADL;AAhBiC,CAA9B,EAmBf;AAAEV,EAAAA;AAAF,CAnBe,CAAlB,C,CAqBA;;AACAc,IAAI,CAACC,SAAL,CAAeC,MAAf,GAAwB,YAAY;AAClC,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAL,EAAlB,CAAf;AACA,SAAOH,MAAP;AACD,CAHD;;AAKAI,MAAM,CAACC,OAAP,GAAiBR,IAAjB",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\n//var mysql = require('mysql');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst sequelize = require('../../config/database');\n\nconst tableName = 'publisher';\n\nconst Publisher = sequelize.define('Publisher', {\n  id: {\n    type: Sequelize.INTEGER,\n    unique: true,\n    primaryKey: true,\n    autoIncrement: true,\n  },\n  name: {\n    type: Sequelize.STRING,\n  },\n  point_of_contact: {\n    type: Sequelize.STRING,\n  },\n  email: {\n    type: Sequelize.STRING,\n  },\n  web_address: {\n    type: Sequelize.STRING,\n  },\n}, { tableName });\n\n// eslint-disable-next-line\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  return values;\n};\n\nmodule.exports = Spec;\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1566000669354
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/controllers/CategoryController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/CategoryController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/controllers/CategoryController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/controllers/CategoryController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
        "sourceFileName": "CategoryController.js"
      }
    },
    "ast": null,
    "code": "const Spec = require('../models/Spec.js');\n\nconst Category = require('../models/Category.js');\n\nconst Publisher = require('../models/Publisher.js');\n\nconst authService = require('../services/auth.service');\n\nconst bcryptService = require('../services/bcrypt.service');\n\nconst express = require('express');\n\nconst app = express();\n\nconst multer = require('multer');\n\nconst cors = require('cors');\n\napp.use(cors());\n\nconst SwaggerParser = require('swagger-parser');\n\nconst sequelize = sequelize();\n/*\nconst multer = require('multer')\n\nvar storage = multer.memoryStorage()\nvar upload = multer({ storage: storage }).single(\"file\");\n*/\n\nconst CategoryController = () => {\n  /*\n  const register = async (req, res) => {\n    console.log(\"received\" + req.file);\n    console.log(req.body.categoryId);\n     SwaggerParser.validate(req.file.path, (err, api) => {\n      if (err) {\n        console.error(err);\n      }\n      else {\n        console.log(\"API name: %s, Version: %s, BODY TITLE: %s\", api.info.title, api.info.version, req.body.apiName);\n        console.log(\"NM: \" + (!req.body.apiName || req.body.apiName == null || req.body.apiName == '') ); \n        try {\n          const data = Spec.create({\n            name: (!req.body.apiName || req.body.apiName == null || req.body.apiName == '' || req.body.apiName == 'null') ? api.info.title : req.body.apiName,\n            description: api.info.description,\n            spec: SwaggerParser.YAML.stringify(api),\n            version: api.info.version,\n            source_repository: api.info[\"x-origin\"].url,\n            avatar_url: api.info[\"x-logo\"].url,\n            category_id: req.body.categoryId\n          });\n          const token = authService().issue({ id: data.id });\n          //console.log(data);\n    \n         return res.status(200).json({ msg: 'Success!' });\n        } catch (err) {\n          console.log(err);\n          return res.status(500).json({ msg: 'Internal server error' });\n        }\n        \n      }\n    });\n   };\n  */\n  const validate = (req, res) => {\n    const {\n      token\n    } = req.body;\n    authService().verify(token, err => {\n      if (err) {\n        return res.status(401).json({\n          isvalid: false,\n          err: 'Invalid Token!'\n        });\n      }\n\n      return res.status(200).json({\n        isvalid: true\n      });\n    });\n  };\n\n  const getAll = async (req, res) => {\n    try {\n      const categories = await Spec.findAndCountAll({\n        attributes: ['name', sequelize.fn('COUNT', sequelize.col('spec.category_id'))],\n        order: [// Will escape title and validate DESC against a list of valid direction parameters\n        ['name', 'ASC']],\n        include: [{\n          as: 'spec',\n          model: Spec,\n          attributes: []\n        }]\n      });\n      return res.status(200).json({\n        apis: categories.rows,\n        total: categories.count\n      });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({\n        msg: 'Internal server error'\n      });\n    }\n  };\n\n  return {\n    validate,\n    getAll\n  };\n};\n\nmodule.exports = CategoryController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3J5Q29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJTcGVjIiwicmVxdWlyZSIsIkNhdGVnb3J5IiwiUHVibGlzaGVyIiwiYXV0aFNlcnZpY2UiLCJiY3J5cHRTZXJ2aWNlIiwiZXhwcmVzcyIsImFwcCIsIm11bHRlciIsImNvcnMiLCJ1c2UiLCJTd2FnZ2VyUGFyc2VyIiwic2VxdWVsaXplIiwiQ2F0ZWdvcnlDb250cm9sbGVyIiwidmFsaWRhdGUiLCJyZXEiLCJyZXMiLCJ0b2tlbiIsImJvZHkiLCJ2ZXJpZnkiLCJlcnIiLCJzdGF0dXMiLCJqc29uIiwiaXN2YWxpZCIsImdldEFsbCIsImNhdGVnb3JpZXMiLCJmaW5kQW5kQ291bnRBbGwiLCJhdHRyaWJ1dGVzIiwiZm4iLCJjb2wiLCJvcmRlciIsImluY2x1ZGUiLCJhcyIsIm1vZGVsIiwiYXBpcyIsInJvd3MiLCJ0b3RhbCIsImNvdW50IiwiY29uc29sZSIsImxvZyIsIm1zZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLG1CQUFELENBQXBCOztBQUNBLE1BQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLHVCQUFELENBQXhCOztBQUNBLE1BQU1FLFNBQVMsR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXpCOztBQUdBLE1BQU1HLFdBQVcsR0FBR0gsT0FBTyxDQUFDLDBCQUFELENBQTNCOztBQUNBLE1BQU1JLGFBQWEsR0FBR0osT0FBTyxDQUFDLDRCQUFELENBQTdCOztBQUVBLE1BQU1LLE9BQU8sR0FBR0wsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTU0sR0FBRyxHQUFHRCxPQUFPLEVBQW5COztBQUNBLE1BQU1FLE1BQU0sR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQU0sR0FBRyxDQUFDRyxHQUFKLENBQVFELElBQUksRUFBWjs7QUFDQSxNQUFNRSxhQUFhLEdBQUdWLE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFFQSxNQUFNVyxTQUFTLEdBQUdBLFNBQVMsRUFBM0I7QUFJQTs7Ozs7OztBQU9BLE1BQU1DLGtCQUFrQixHQUFHLE1BQU07QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQ0EsUUFBTUMsUUFBUSxHQUFHLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzdCLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFZRixHQUFHLENBQUNHLElBQXRCO0FBQ0FkLElBQUFBLFdBQVcsR0FBR2UsTUFBZCxDQUFxQkYsS0FBckIsRUFBNkJHLEdBQUQsSUFBUztBQUNuQyxVQUFJQSxHQUFKLEVBQVM7QUFDUCxlQUFPSixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxVQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkgsVUFBQUEsR0FBRyxFQUFFO0FBQXZCLFNBQXJCLENBQVA7QUFDRDs7QUFDRCxhQUFPSixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxRQUFBQSxPQUFPLEVBQUU7QUFBWCxPQUFyQixDQUFQO0FBQ0QsS0FMRDtBQU1ELEdBUkQ7O0FBYUEsUUFBTUMsTUFBTSxHQUFHLE9BQU9ULEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUNqQyxRQUFJO0FBQ0YsWUFBTVMsVUFBVSxHQUFHLE1BQU16QixJQUFJLENBQUMwQixlQUFMLENBQXFCO0FBQzVDQyxRQUFBQSxVQUFVLEVBQUMsQ0FBQyxNQUFELEVBQVNmLFNBQVMsQ0FBQ2dCLEVBQVYsQ0FBYSxPQUFiLEVBQXNCaEIsU0FBUyxDQUFDaUIsR0FBVixDQUFjLGtCQUFkLENBQXRCLENBQVQsQ0FEaUM7QUFJNUNDLFFBQUFBLEtBQUssRUFBRSxDQUNMO0FBQ0EsU0FBQyxNQUFELEVBQVMsS0FBVCxDQUZLLENBSnFDO0FBUTVDQyxRQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUNSQyxVQUFBQSxFQUFFLEVBQUUsTUFESTtBQUVSQyxVQUFBQSxLQUFLLEVBQUVqQyxJQUZDO0FBR1IyQixVQUFBQSxVQUFVLEVBQUU7QUFISixTQUFEO0FBUm1DLE9BQXJCLENBQXpCO0FBZUEsYUFBT1gsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVksUUFBQUEsSUFBSSxFQUFFVCxVQUFVLENBQUNVLElBQW5CO0FBQXlCQyxRQUFBQSxLQUFLLEVBQUVYLFVBQVUsQ0FBQ1k7QUFBM0MsT0FBckIsQ0FBUDtBQUNELEtBakJELENBaUJFLE9BQU9qQixHQUFQLEVBQVk7QUFDWmtCLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZbkIsR0FBWjtBQUNBLGFBQU9KLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVrQixRQUFBQSxHQUFHLEVBQUU7QUFBUCxPQUFyQixDQUFQO0FBQ0Q7QUFDRixHQXRCRDs7QUEyQkEsU0FBTztBQUVMMUIsSUFBQUEsUUFGSztBQUdMVSxJQUFBQTtBQUhLLEdBQVA7QUFLRCxDQXJGRDs7QUF1RkFpQixNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixrQkFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NocmlzZnUvb3BlbmFwaS5wb3J0YWwvc2VydmVyL2FwaS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNwZWMgPSByZXF1aXJlKCcuLi9tb2RlbHMvU3BlYy5qcycpO1xuY29uc3QgQ2F0ZWdvcnkgPSByZXF1aXJlKCcuLi9tb2RlbHMvQ2F0ZWdvcnkuanMnKTtcbmNvbnN0IFB1Ymxpc2hlciA9IHJlcXVpcmUoJy4uL21vZGVscy9QdWJsaXNoZXIuanMnKTtcblxuXG5jb25zdCBhdXRoU2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZScpO1xuY29uc3QgYmNyeXB0U2VydmljZSA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2JjcnlwdC5zZXJ2aWNlJyk7XG5cbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKVxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmFwcC51c2UoY29ycygpKTtcbmNvbnN0IFN3YWdnZXJQYXJzZXIgPSByZXF1aXJlKCdzd2FnZ2VyLXBhcnNlcicpO1xuXG5jb25zdCBzZXF1ZWxpemUgPSBzZXF1ZWxpemUoKTtcblxuXG5cbi8qXG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKVxuXG52YXIgc3RvcmFnZSA9IG11bHRlci5tZW1vcnlTdG9yYWdlKClcbnZhciB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlOiBzdG9yYWdlIH0pLnNpbmdsZShcImZpbGVcIik7XG4qL1xuXG5jb25zdCBDYXRlZ29yeUNvbnRyb2xsZXIgPSAoKSA9PiB7XG5cbiAgLypcbiAgY29uc3QgcmVnaXN0ZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcInJlY2VpdmVkXCIgKyByZXEuZmlsZSk7XG4gICAgY29uc29sZS5sb2cocmVxLmJvZHkuY2F0ZWdvcnlJZCk7XG5cbiAgICBTd2FnZ2VyUGFyc2VyLnZhbGlkYXRlKHJlcS5maWxlLnBhdGgsIChlcnIsIGFwaSkgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJBUEkgbmFtZTogJXMsIFZlcnNpb246ICVzLCBCT0RZIFRJVExFOiAlc1wiLCBhcGkuaW5mby50aXRsZSwgYXBpLmluZm8udmVyc2lvbiwgcmVxLmJvZHkuYXBpTmFtZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTk06IFwiICsgKCFyZXEuYm9keS5hcGlOYW1lIHx8IHJlcS5ib2R5LmFwaU5hbWUgPT0gbnVsbCB8fCByZXEuYm9keS5hcGlOYW1lID09ICcnKSApOyBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBkYXRhID0gU3BlYy5jcmVhdGUoe1xuICAgICAgICAgICAgbmFtZTogKCFyZXEuYm9keS5hcGlOYW1lIHx8IHJlcS5ib2R5LmFwaU5hbWUgPT0gbnVsbCB8fCByZXEuYm9keS5hcGlOYW1lID09ICcnIHx8IHJlcS5ib2R5LmFwaU5hbWUgPT0gJ251bGwnKSA/IGFwaS5pbmZvLnRpdGxlIDogcmVxLmJvZHkuYXBpTmFtZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBhcGkuaW5mby5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHNwZWM6IFN3YWdnZXJQYXJzZXIuWUFNTC5zdHJpbmdpZnkoYXBpKSxcbiAgICAgICAgICAgIHZlcnNpb246IGFwaS5pbmZvLnZlcnNpb24sXG4gICAgICAgICAgICBzb3VyY2VfcmVwb3NpdG9yeTogYXBpLmluZm9bXCJ4LW9yaWdpblwiXS51cmwsXG4gICAgICAgICAgICBhdmF0YXJfdXJsOiBhcGkuaW5mb1tcIngtbG9nb1wiXS51cmwsXG4gICAgICAgICAgICBjYXRlZ29yeV9pZDogcmVxLmJvZHkuY2F0ZWdvcnlJZFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IHRva2VuID0gYXV0aFNlcnZpY2UoKS5pc3N1ZSh7IGlkOiBkYXRhLmlkIH0pO1xuICAgICAgICAgIC8vY29uc29sZS5sb2coZGF0YSk7XG4gICAgXG4gICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBtc2c6ICdTdWNjZXNzIScgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbXNnOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgIH1cbiAgICB9KTtcblxuICB9O1xuKi9cblxuXG4gIGNvbnN0IHZhbGlkYXRlID0gKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB0b2tlbiB9ID0gcmVxLmJvZHk7XG4gICAgYXV0aFNlcnZpY2UoKS52ZXJpZnkodG9rZW4sIChlcnIpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgaXN2YWxpZDogZmFsc2UsIGVycjogJ0ludmFsaWQgVG9rZW4hJyB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGlzdmFsaWQ6IHRydWUgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgXG5cblxuICBjb25zdCBnZXRBbGwgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY2F0ZWdvcmllcyA9IGF3YWl0IFNwZWMuZmluZEFuZENvdW50QWxsKHtcbiAgICAgICAgYXR0cmlidXRlczpbJ25hbWUnLCBzZXF1ZWxpemUuZm4oJ0NPVU5UJywgc2VxdWVsaXplLmNvbCgnc3BlYy5jYXRlZ29yeV9pZCcpKVxuICAgICAgICBdLFxuXG4gICAgICAgIG9yZGVyOiBbXG4gICAgICAgICAgLy8gV2lsbCBlc2NhcGUgdGl0bGUgYW5kIHZhbGlkYXRlIERFU0MgYWdhaW5zdCBhIGxpc3Qgb2YgdmFsaWQgZGlyZWN0aW9uIHBhcmFtZXRlcnNcbiAgICAgICAgICBbJ25hbWUnLCAnQVNDJ11dLFxuICAgICAgICBcbiAgICAgICAgaW5jbHVkZTogW3tcbiAgICAgICAgICBhczogJ3NwZWMnLCBcbiAgICAgICAgICBtb2RlbDogU3BlYyxcbiAgICAgICAgICBhdHRyaWJ1dGVzOiBbXVxuICAgICAgICB9XVxuICAgICAgICBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgYXBpczogY2F0ZWdvcmllcy5yb3dzLCB0b3RhbDogY2F0ZWdvcmllcy5jb3VudCB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtc2c6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0pO1xuICAgIH1cbiAgfTtcblxuICBcblxuXG4gIHJldHVybiB7XG5cbiAgICB2YWxpZGF0ZSxcbiAgICBnZXRBbGwsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5Q29udHJvbGxlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "CategoryController.js"
      ],
      "names": [
        "Spec",
        "require",
        "Category",
        "Publisher",
        "authService",
        "bcryptService",
        "express",
        "app",
        "multer",
        "cors",
        "use",
        "SwaggerParser",
        "sequelize",
        "CategoryController",
        "validate",
        "req",
        "res",
        "token",
        "body",
        "verify",
        "err",
        "status",
        "json",
        "isvalid",
        "getAll",
        "categories",
        "findAndCountAll",
        "attributes",
        "fn",
        "col",
        "order",
        "include",
        "as",
        "model",
        "apis",
        "rows",
        "total",
        "count",
        "console",
        "log",
        "msg",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAzB;;AAGA,MAAMG,WAAW,GAAGH,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAMI,aAAa,GAAGJ,OAAO,CAAC,4BAAD,CAA7B;;AAEA,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMM,GAAG,GAAGD,OAAO,EAAnB;;AACA,MAAME,MAAM,GAAGP,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AACAM,GAAG,CAACG,GAAJ,CAAQD,IAAI,EAAZ;;AACA,MAAME,aAAa,GAAGV,OAAO,CAAC,gBAAD,CAA7B;;AAEA,MAAMW,SAAS,GAAGA,SAAS,EAA3B;AAIA;;;;;;;AAOA,MAAMC,kBAAkB,GAAG,MAAM;AAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAYF,GAAG,CAACG,IAAtB;AACAd,IAAAA,WAAW,GAAGe,MAAd,CAAqBF,KAArB,EAA6BG,GAAD,IAAS;AACnC,UAAIA,GAAJ,EAAS;AACP,eAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBH,UAAAA,GAAG,EAAE;AAAvB,SAArB,CAAP;AACD;;AACD,aAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD,KALD;AAMD,GARD;;AAaA,QAAMC,MAAM,GAAG,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAI;AACF,YAAMS,UAAU,GAAG,MAAMzB,IAAI,CAAC0B,eAAL,CAAqB;AAC5CC,QAAAA,UAAU,EAAC,CAAC,MAAD,EAASf,SAAS,CAACgB,EAAV,CAAa,OAAb,EAAsBhB,SAAS,CAACiB,GAAV,CAAc,kBAAd,CAAtB,CAAT,CADiC;AAI5CC,QAAAA,KAAK,EAAE,CACL;AACA,SAAC,MAAD,EAAS,KAAT,CAFK,CAJqC;AAQ5CC,QAAAA,OAAO,EAAE,CAAC;AACRC,UAAAA,EAAE,EAAE,MADI;AAERC,UAAAA,KAAK,EAAEjC,IAFC;AAGR2B,UAAAA,UAAU,EAAE;AAHJ,SAAD;AARmC,OAArB,CAAzB;AAeA,aAAOX,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,QAAAA,IAAI,EAAET,UAAU,CAACU,IAAnB;AAAyBC,QAAAA,KAAK,EAAEX,UAAU,CAACY;AAA3C,OAArB,CAAP;AACD,KAjBD,CAiBE,OAAOjB,GAAP,EAAY;AACZkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACA,aAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEkB,QAAAA,GAAG,EAAE;AAAP,OAArB,CAAP;AACD;AACF,GAtBD;;AA2BA,SAAO;AAEL1B,IAAAA,QAFK;AAGLU,IAAAA;AAHK,GAAP;AAKD,CArFD;;AAuFAiB,MAAM,CAACC,OAAP,GAAiB7B,kBAAjB",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/controllers",
      "sourcesContent": [
        "const Spec = require('../models/Spec.js');\nconst Category = require('../models/Category.js');\nconst Publisher = require('../models/Publisher.js');\n\n\nconst authService = require('../services/auth.service');\nconst bcryptService = require('../services/bcrypt.service');\n\nconst express = require('express');\nconst app = express();\nconst multer = require('multer')\nconst cors = require('cors');\napp.use(cors());\nconst SwaggerParser = require('swagger-parser');\n\nconst sequelize = sequelize();\n\n\n\n/*\nconst multer = require('multer')\n\nvar storage = multer.memoryStorage()\nvar upload = multer({ storage: storage }).single(\"file\");\n*/\n\nconst CategoryController = () => {\n\n  /*\n  const register = async (req, res) => {\n    console.log(\"received\" + req.file);\n    console.log(req.body.categoryId);\n\n    SwaggerParser.validate(req.file.path, (err, api) => {\n      if (err) {\n        console.error(err);\n      }\n      else {\n        console.log(\"API name: %s, Version: %s, BODY TITLE: %s\", api.info.title, api.info.version, req.body.apiName);\n        console.log(\"NM: \" + (!req.body.apiName || req.body.apiName == null || req.body.apiName == '') ); \n        try {\n          const data = Spec.create({\n            name: (!req.body.apiName || req.body.apiName == null || req.body.apiName == '' || req.body.apiName == 'null') ? api.info.title : req.body.apiName,\n            description: api.info.description,\n            spec: SwaggerParser.YAML.stringify(api),\n            version: api.info.version,\n            source_repository: api.info[\"x-origin\"].url,\n            avatar_url: api.info[\"x-logo\"].url,\n            category_id: req.body.categoryId\n          });\n          const token = authService().issue({ id: data.id });\n          //console.log(data);\n    \n         return res.status(200).json({ msg: 'Success!' });\n        } catch (err) {\n          console.log(err);\n          return res.status(500).json({ msg: 'Internal server error' });\n        }\n        \n      }\n    });\n\n  };\n*/\n\n\n  const validate = (req, res) => {\n    const { token } = req.body;\n    authService().verify(token, (err) => {\n      if (err) {\n        return res.status(401).json({ isvalid: false, err: 'Invalid Token!' });\n      }\n      return res.status(200).json({ isvalid: true });\n    });\n  };\n\n  \n\n\n  const getAll = async (req, res) => {\n    try {\n      const categories = await Spec.findAndCountAll({\n        attributes:['name', sequelize.fn('COUNT', sequelize.col('spec.category_id'))\n        ],\n\n        order: [\n          // Will escape title and validate DESC against a list of valid direction parameters\n          ['name', 'ASC']],\n        \n        include: [{\n          as: 'spec', \n          model: Spec,\n          attributes: []\n        }]\n        \n      });\n      return res.status(200).json({ apis: categories.rows, total: categories.count });\n    } catch (err) {\n      console.log(err);\n      return res.status(500).json({ msg: 'Internal server error' });\n    }\n  };\n\n  \n\n\n  return {\n\n    validate,\n    getAll,\n  };\n};\n\nmodule.exports = CategoryController;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572749841125
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/models/Spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/models/Spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/models/Spec.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/models/Spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
        "sourceFileName": "Spec.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../../config/database');\n\nconst Publisher = require('./Publisher');\n\nconst User = require('./User');\n\nconst Category = require('./Category');\n\nconst tableName = 'openapi_specs';\nconst Spec = sequelize.define('Spec', {\n  id: {\n    type: Sequelize.INTEGER,\n    unique: true,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  name: {\n    type: Sequelize.STRING(200)\n  },\n  description: {\n    type: Sequelize.STRING(1024)\n  },\n  spec: {\n    type: Sequelize.TEXT\n  },\n  version: {\n    type: Sequelize.STRING(32)\n  },\n  source_repository: {\n    type: Sequelize.STRING(255)\n  },\n  avatar_url: {\n    type: Sequelize.STRING(255)\n  },\n  publisher_id: {\n    type: Sequelize.INTEGER\n  },\n  category_id: {\n    type: Sequelize.INTEGER\n  },\n  num_comments: {\n    type: Sequelize.INTEGER\n  },\n  createdAt: {\n    allowNull: true,\n    field: 'created_at',\n    type: Sequelize.DATE\n  },\n  updatedAt: {\n    allowNull: true,\n    field: 'updated_at',\n    type: Sequelize.DATE\n  },\n  created_by: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    references: {\n      model: User,\n      key: 'id'\n    }\n  },\n  updated_by: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    references: {\n      model: User,\n      key: 'id'\n    }\n  }\n}, {\n  tableName\n});\nSpec.belongsTo(Category, {\n  as: 'category',\n  foreignKey: 'category_id'\n});\nSpec.belongsTo(Publisher, {\n  as: 'publisher',\n  foreignKey: 'publisher_id'\n}); // eslint-disable-next-line\n\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n  return values;\n};\n\nmodule.exports = Spec;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwZWMuanMiXSwibmFtZXMiOlsiU2VxdWVsaXplIiwicmVxdWlyZSIsInNlcXVlbGl6ZSIsIlB1Ymxpc2hlciIsIlVzZXIiLCJDYXRlZ29yeSIsInRhYmxlTmFtZSIsIlNwZWMiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwidW5pcXVlIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJuYW1lIiwiU1RSSU5HIiwiZGVzY3JpcHRpb24iLCJzcGVjIiwiVEVYVCIsInZlcnNpb24iLCJzb3VyY2VfcmVwb3NpdG9yeSIsImF2YXRhcl91cmwiLCJwdWJsaXNoZXJfaWQiLCJjYXRlZ29yeV9pZCIsIm51bV9jb21tZW50cyIsImNyZWF0ZWRBdCIsImFsbG93TnVsbCIsImZpZWxkIiwiREFURSIsInVwZGF0ZWRBdCIsImNyZWF0ZWRfYnkiLCJyZWZlcmVuY2VzIiwibW9kZWwiLCJrZXkiLCJ1cGRhdGVkX2J5IiwiYmVsb25nc1RvIiwiYXMiLCJmb3JlaWduS2V5IiwicHJvdG90eXBlIiwidG9KU09OIiwidmFsdWVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyx1QkFBRCxDQUF6Qjs7QUFDQSxNQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLE1BQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsTUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFFQSxNQUFNSyxTQUFTLEdBQUcsZUFBbEI7QUFFQSxNQUFNQyxJQUFJLEdBQUdMLFNBQVMsQ0FBQ00sTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsRUFBQUEsRUFBRSxFQUFFO0FBQ0ZDLElBQUFBLElBQUksRUFBRVYsU0FB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QUtDLEdBQUwsRUFBbEIsQ0FBZjtBQUVBLFNBQU9ILE1BQVA7QUFDRCxDQUpEOztBQU9BSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ2QyxJQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hyaXNmdS9vcGVuYXBpLnBvcnRhbC9zZXJ2ZXIvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xuY29uc3Qgc2VxdWVsaXplID0gcmVxdWlyZSgnLi4vLi4vY29uZmlnL2RhdGFiYXNlJyk7XG5jb25zdCBQdWJsaXNoZXIgPSByZXF1aXJlKCcuL1B1Ymxpc2hlcicpO1xuY29uc3QgVXNlciA9IHJlcXVpcmUoJy4vVXNlcicpO1xuY29uc3QgQ2F0ZWdvcnkgPSByZXF1aXJlKCcuL0NhdGVnb3J5Jyk7XG5cbmNvbnN0IHRhYmxlTmFtZSA9ICdvcGVuYXBpX3NwZWNzJztcblxuY29uc3QgU3BlYyA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1NwZWMnLCB7XG4gIGlkOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcbiAgfSxcbiAgbmFtZToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcoMjAwKSxcbiAgfSxcbiAgZGVzY3JpcHRpb246IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HKDEwMjQpLFxuICB9LFxuICBzcGVjOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFQsXG4gIH0sXG4gIHZlcnNpb246IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HKDMyKSxcbiAgfSxcbiAgc291cmNlX3JlcG9zaXRvcnk6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HKDI1NSksXG4gIH0sXG4gIGF2YXRhcl91cmw6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HKDI1NSksXG4gIH0sXG4gIHB1Ymxpc2hlcl9pZDoge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgXG4gIH0sXG4gIGNhdGVnb3J5X2lkOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICBcbiAgfSxcbiAgbnVtX2NvbW1lbnRzOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gIH0sXG4gIGNyZWF0ZWRBdDoge1xuICAgIGFsbG93TnVsbDogdHJ1ZSxcbiAgICBmaWVsZDogJ2NyZWF0ZWRfYXQnLFxuICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gIH0sXG5cbiAgdXBkYXRlZEF0OiB7XG4gICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgIGZpZWxkOiAndXBkYXRlZF9hdCcsXG4gICAgdHlwZTogU2VxdWVsaXplLkRBVEVcbiAgfSxcblxuICBjcmVhdGVkX2J5OiB7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICByZWZlcmVuY2VzOiB7XG4gICAgICBtb2RlbDogVXNlcixcbiAgICAgIGtleTogJ2lkJ1xuICAgIH1cbiAgfSxcbiAgdXBkYXRlZF9ieToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgcmVmZXJlbmNlczoge1xuICAgICAgbW9kZWw6IFVzZXIsXG4gICAgICBrZXk6ICdpZCdcbiAgICB9XG4gIH0sXG59LCB7IHRhYmxlTmFtZSB9KTtcblxuU3BlYy5iZWxvbmdzVG8oQ2F0ZWdvcnksIHtcbiAgYXM6ICdjYXRlZ29yeScsXG4gIGZvcmVpZ25LZXk6ICdjYXRlZ29yeV9pZCdcbn0pO1xuXG5TcGVjLmJlbG9uZ3NUbyhQdWJsaXNoZXIsIHtcbiAgYXM6ICdwdWJsaXNoZXInLFxuICBmb3JlaWduS2V5OiAncHVibGlzaGVyX2lkJ1xufSk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuU3BlYy5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xuICBjb25zdCB2YWx1ZXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmdldCgpKTtcblxuICByZXR1cm4gdmFsdWVzO1xufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IFNwZWM7XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Spec.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Publisher",
        "User",
        "Category",
        "tableName",
        "Spec",
        "define",
        "id",
        "type",
        "INTEGER",
        "unique",
        "primaryKey",
        "autoIncrement",
        "name",
        "STRING",
        "description",
        "spec",
        "TEXT",
        "version",
        "source_repository",
        "avatar_url",
        "publisher_id",
        "category_id",
        "num_comments",
        "createdAt",
        "allowNull",
        "field",
        "DATE",
        "updatedAt",
        "created_by",
        "references",
        "model",
        "key",
        "updated_by",
        "belongsTo",
        "as",
        "foreignKey",
        "prototype",
        "toJSON",
        "values",
        "Object",
        "assign",
        "get",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst sequelize = require('../../config/database');\nconst Publisher = require('./Publisher');\nconst User = require('./User');\nconst Category = require('./Category');\n\nconst tableName = 'openapi_specs';\n\nconst Spec = sequelize.define('Spec', {\n  id: {\n    type: Sequelize.INTEGER,\n    unique: true,\n    primaryKey: true,\n    autoIncrement: true,\n  },\n  name: {\n    type: Sequelize.STRING(200),\n  },\n  description: {\n    type: Sequelize.STRING(1024),\n  },\n  spec: {\n    type: Sequelize.TEXT,\n  },\n  version: {\n    type: Sequelize.STRING(32),\n  },\n  source_repository: {\n    type: Sequelize.STRING(255),\n  },\n  avatar_url: {\n    type: Sequelize.STRING(255),\n  },\n  publisher_id: {\n    type: Sequelize.INTEGER,\n   \n  },\n  category_id: {\n    type: Sequelize.INTEGER,\n   \n  },\n  num_comments: {\n    type: Sequelize.INTEGER,\n  },\n  createdAt: {\n    allowNull: true,\n    field: 'created_at',\n    type: Sequelize.DATE\n  },\n\n  updatedAt: {\n    allowNull: true,\n    field: 'updated_at',\n    type: Sequelize.DATE\n  },\n\n  created_by: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    references: {\n      model: User,\n      key: 'id'\n    }\n  },\n  updated_by: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    references: {\n      model: User,\n      key: 'id'\n    }\n  },\n}, { tableName });\n\nSpec.belongsTo(Category, {\n  as: 'category',\n  foreignKey: 'category_id'\n});\n\nSpec.belongsTo(Publisher, {\n  as: 'publisher',\n  foreignKey: 'publisher_id'\n});\n\n// eslint-disable-next-line\nSpec.prototype.toJSON = function () {\n  const values = Object.assign({}, this.get());\n\n  return values;\n};\n\n\nmodule.exports = Spec;\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572750181096
  },
  "{\"sourceRoot\":\"/Users/chrisfu/openapi.portal/server/api/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chrisfu/openapi.portal/server\",\"filename\":\"/Users/chrisfu/openapi.portal/server/api/models/Category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chrisfu/openapi.portal/server\",\"plugins\":[],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chrisfu/openapi.portal/server",
      "filename": "/Users/chrisfu/openapi.portal/server/api/models/Category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chrisfu/openapi.portal/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chrisfu/openapi.portal/server/api/models/Category.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chrisfu/openapi.portal/server/api/models/Category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
        "sourceFileName": "Category.js"
      }
    },
    "ast": null,
    "code": "const Sequelize = require('sequelize');\n\nconst sequelize = require('../../config/database');\n\nconst Spec = require('./Spec');\n\nconst tableName = 'openapi_categories';\nconst Category = sequelize.define('Category', {\n  id: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  name: {\n    type: Sequelize.STRING(200)\n  }\n}, {\n  tableName\n});\nCategory.hasMany(Spec, {\n  as: 'spec',\n  primaryKey: 'id'\n});\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIlNlcXVlbGl6ZSIsInJlcXVpcmUiLCJzZXF1ZWxpemUiLCJTcGVjIiwidGFibGVOYW1lIiwiQ2F0ZWdvcnkiLCJkZWZpbmUiLCJpZCIsInR5cGUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsImF1dG9JbmNyZW1lbnQiLCJuYW1lIiwiU1RSSU5HIiwiaGFzTWFueSIsImFzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyx1QkFBRCxDQUF6Qjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUVBLE1BQU1HLFNBQVMsR0FBRyxvQkFBbEI7QUFFQSxNQUFNQyxRQUFRLEdBQUdILFNBQVMsQ0FBQ0ksTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM1Q0MsRUFBQUEsRUFBRSxFQUFFO0FBQ0ZDLElBQUFBLElBQUksRUFBRVIsU0FBUyxDQUFDUyxPQURkO0FBRUZDLElBQUFBLFVBQVUsRUFBRSxJQUZWO0FBR0ZDLElBQUFBLGFBQWEsRUFBRTtBQUhiLEdBRHdDO0FBTzVDQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkosSUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNhLE1BQVYsQ0FBaUIsR0FBakI7QUFERjtBQVBzQyxDQUE3QixFQVlkO0FBQUdULEVBQUFBO0FBQUgsQ0FaYyxDQUFqQjtBQWVBQyxRQUFRLENBQUNTLE9BQVQsQ0FBaUJYLElBQWpCLEVBQXVCO0FBQ3JCWSxFQUFBQSxFQUFFLEVBQUUsTUFEaUI7QUFFckJMLEVBQUFBLFVBQVUsRUFBRTtBQUZTLENBQXZCO0FBT0FNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosUUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NocmlzZnUvb3BlbmFwaS5wb3J0YWwvc2VydmVyL2FwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IHNlcXVlbGl6ZSA9IHJlcXVpcmUoJy4uLy4uL2NvbmZpZy9kYXRhYmFzZScpO1xuY29uc3QgU3BlYyA9IHJlcXVpcmUoJy4vU3BlYycpO1xuXG5jb25zdCB0YWJsZU5hbWUgPSAnb3BlbmFwaV9jYXRlZ29yaWVzJztcblxuY29uc3QgQ2F0ZWdvcnkgPSBzZXF1ZWxpemUuZGVmaW5lKCdDYXRlZ29yeScsIHtcbiAgaWQ6IHtcbiAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcbiAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gIH0sXG5cbiAgbmFtZToge1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcoMjAwKSxcbiAgICBcbiAgfSxcbiAgXG59LCB7ICB0YWJsZU5hbWUgfSk7XG5cblxuQ2F0ZWdvcnkuaGFzTWFueShTcGVjLCB7XG4gIGFzOiAnc3BlYycsXG4gIHByaW1hcnlLZXk6ICdpZCdcbn0pO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBDYXRlZ29yeTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Category.js"
      ],
      "names": [
        "Sequelize",
        "require",
        "sequelize",
        "Spec",
        "tableName",
        "Category",
        "define",
        "id",
        "type",
        "INTEGER",
        "primaryKey",
        "autoIncrement",
        "name",
        "STRING",
        "hasMany",
        "as",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,uBAAD,CAAzB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMG,SAAS,GAAG,oBAAlB;AAEA,MAAMC,QAAQ,GAAGH,SAAS,CAACI,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAER,SAAS,CAACS,OADd;AAEFC,IAAAA,UAAU,EAAE,IAFV;AAGFC,IAAAA,aAAa,EAAE;AAHb,GADwC;AAO5CC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAER,SAAS,CAACa,MAAV,CAAiB,GAAjB;AADF;AAPsC,CAA7B,EAYd;AAAGT,EAAAA;AAAH,CAZc,CAAjB;AAeAC,QAAQ,CAACS,OAAT,CAAiBX,IAAjB,EAAuB;AACrBY,EAAAA,EAAE,EAAE,MADiB;AAErBL,EAAAA,UAAU,EAAE;AAFS,CAAvB;AAOAM,MAAM,CAACC,OAAP,GAAiBZ,QAAjB",
      "sourceRoot": "/Users/chrisfu/openapi.portal/server/api/models",
      "sourcesContent": [
        "const Sequelize = require('sequelize');\nconst sequelize = require('../../config/database');\nconst Spec = require('./Spec');\n\nconst tableName = 'openapi_categories';\n\nconst Category = sequelize.define('Category', {\n  id: {\n    type: Sequelize.INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n  },\n\n  name: {\n    type: Sequelize.STRING(200),\n    \n  },\n  \n}, {  tableName });\n\n\nCategory.hasMany(Spec, {\n  as: 'spec',\n  primaryKey: 'id'\n});\n\n\n\nmodule.exports = Category;"
      ]
    },
    "sourceType": "module",
    "mtime": 1572750887912
  }
}